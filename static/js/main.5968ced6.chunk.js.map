{"version":3,"sources":["StoreContext.jsx","components/topbar/Topbar.jsx","components/closeFriend/CloseFriend.jsx","components/sidebar/Sidebar.jsx","components/post/Post.jsx","components/share/Share.jsx","components/feed/Feed.jsx","components/online/Online.jsx","components/rightbarFollowings/RightbarFollowings.jsx","components/rightbar/Rightbar.jsx","pages/home/Home.jsx","pages/login/Login.jsx","pages/profile/Profile.jsx","pages/register/Register.jsx","components/conversations/Conversation.jsx","components/message/Message.jsx","components/chatOnline/ChatOnline.jsx","pages/messenger/Messenger.jsx","pages/user/userRightbar.jsx","pages/user/user.jsx","base.js","App.js","index.js"],"names":["StoreContext","React","createContext","Topbar","Consumer","SF","className","to","Search","placeholder","Chat","onClick","onClickTopbarImg","ExitToApp","src","currentPerson","icon","userId","alt","CloseFriend","user","onClickUser","userName","Sidebar","useState","showMoreFlag","changeShowMoreFlag","Home","Timeline","PlayCircleFilledOutlined","Group","Bookmark","HelpOutline","WorkOutline","Event","School","Object","keys","allUsers","map","key","Post","props","post","like","setLike","isLiked","setIsLiked","postTopFlag","changePostTopFlag","onClickLikeNew","e","x","likeHandler","onClickLike","id","moment","date","fromNow","timeline","onClickDelBut","newOnClickDelBut","index","MoreVert","desc","photo","location","Room","htmlColor","Share","photoFlag","onClickPhotoFlag","sharePhotoLink","changeSharePhotoLink","photoButton","onClickPhotoButton","shareText","changeShareText","locationFlag","onClickLocationFlag","locationText","changeLocationText","locationButtonOk","onClickLocationButtonOk","NewOnClickShare","onClickShare","value","onChange","currentTarget","onKeyPress","PermMedia","Feed","followersPosts","home","followersArr","followers","newFolPosts","posts","concat","sort","a","b","profile","p","currentUser","Online","RightbarFollowings","length","slice","Rightbar","HomeRightbar","newFolArr","online","push","u","ProfileRightbar","userCityFlag","changeUserCityFlag","userCityText","changeUserCityText","userCountryFlag","changeUserCountryFlag","userCountryText","changeUserCountryText","userRelationshipFlag","changeUserRelationshipFlag","userRelationshipText","changeUserRelationshipText","onClickCityButtonNew","onClickInputButton","onClickCountryButtonNew","onClickRelationshipButtonNew","onDoubleClick","city","country","relationship","Login","userEmail","setUserEmail","userPassword","setUserPassword","type","clickLoginButton","Profile","userNameFlag","changeUserNameFlag","userNameText","changeUserNameText","userStatusFlag","changeUserStatusFlag","userStatusText","changeUserStatusText","profileCoverImgFlag","changeProfileCoverImgFlag","profileCoverImgText","changeProfileCoverImgText","profileIconFlag","changeProfileIconFlag","profileIconText","changeProfileIconText","onClickNameButtonNew","onClickStatusButtonNew","onClickCoverButtonNew","onClickProfileIconButtonNew","coverUrl","status","Register","setUserName","userPasswordAgain","setUserPasswordAgain","clickRegisterButton","Conversation","searchText","idArr","searchArr","newSearchArr","name","toUpperCase","includes","Message","own","message","ChatOnline","Messenger","changeMessage","changeSearchText","onSendClickNew","onSendClick","mesArr","messages","mes","values","userRightbar","localCurrentPerson","JSON","parse","localStorage","getItem","isFollow","userFollowFlag","changeUserFollowFlag","followOnUser","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","App","state","this","ref","syncState","context","removeBinding","console","log","repeatPassword","alert","test","Date","valueOf","newPerson","setState","setItem","stringify","history","thisUserEmail","thisUserPassword","users","loginFlag","flag","stateAndFunc","img","newPost","comment","getMonth","getDate","getFullYear","getHours","getMinutes","copyPosts","unshift","newPosts","splice","getAttribute","newText","word","personId","personFollowers","indexOf","newMesMy","true","newMesYour","false","mesArrMy","mesArrYour","objMesMy","objMesYour","newPersonMy","newPersonYour","allUsersNew","Provider","path","Component","withRouter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5968ced6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst StoreContext = React.createContext(null);\r\n\r\nexport default StoreContext;","import React from 'react';\r\nimport \"./topbar.css\";\r\nimport { Search, Chat, ExitToApp } from \"@material-ui/icons\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport StoreContext from '../../StoreContext';\r\n\r\nexport default function Topbar() {\r\n\r\n  return (\r\n    <StoreContext.Consumer>\r\n    {\r\n      (SF) => (\r\n      <div className=\"topbarContainer\">\r\n        <div className=\"topbarLeft\">\r\n          <NavLink to=\"/Profile\">\r\n            <span className=\"logo\">MySoc</span>\r\n          </NavLink>\r\n        </div>\r\n        <div className=\"topbarCenter\">\r\n          <div className=\"searchbar\">\r\n            <Search className=\"searchIcon\" />\r\n            <input\r\n              placeholder=\"Search for friend, post or video\"\r\n              className=\"searchInput\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"topbarRight\">\r\n          <div className=\"topbarLinks\">\r\n          <NavLink to=\"/Profile\">\r\n            <span className=\"topbarLink homepage\">Homepage</span>\r\n          </NavLink>\r\n          <NavLink to=\"/timeline\">\r\n            <span className=\"topbarLink\">Timeline</span>\r\n          </NavLink>\r\n          </div>\r\n          <div className=\"topbarIcons\">\r\n            <NavLink to=\"/messenger\">\r\n              <div className=\"topbarIconItem\">\r\n                <Chat />\r\n                {/* <span className=\"topbarIconBadge\">2</span> */}\r\n              </div>\r\n            </NavLink>\r\n            <NavLink to=\"/MySoc\">\r\n              <div \r\n                className=\"topbarIconItem\"\r\n                onClick={SF.onClickTopbarImg} >\r\n                <ExitToApp />\r\n              </div>\r\n            </NavLink>\r\n          </div>\r\n          <NavLink to=\"/Profile\">\r\n            <img \r\n              src={SF.currentPerson?.icon || (SF.currentPerson?.userId && \"https://yt3.ggpht.com/a/AGF-l79TeE4LZ7QszKiy-EgX9-pXgQTunY_cNGLQfg=s900-c-k-c0xffffffff-no-rj-mo\")} \r\n              alt=\"\" \r\n              className=\"topbarImg\"\r\n            />\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n      )\r\n    }\r\n    </StoreContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport \"./closeFriend.css\";\r\nimport StoreContext from '../../StoreContext';\r\n\r\nexport default function CloseFriend({user}) {\r\n\r\n  return (\r\n    <StoreContext.Consumer>\r\n      {\r\n        (SF) => (\r\n        <NavLink className=\"usersLinks\" to=\"/user\">\r\n          <li onClick={() => SF.onClickUser(user.userId)}  className=\"sidebarFriend\">\r\n            <img className=\"sidebarFriendImg\" src={user.icon || \"assets/person/noAvatar.png\"} alt='' />\r\n            <span className=\"sidebarFriendName\">{user.userName || 'unknown'}</span>\r\n          </li>\r\n        </NavLink>\r\n        )\r\n      }\r\n    </StoreContext.Consumer>\r\n  );\r\n}\r\n","import \"./sidebar.css\";\r\nimport React, {useState} from 'react';\r\nimport { RssFeed, Chat, PlayCircleFilledOutlined, Group, Bookmark, HelpOutline, WorkOutline, Event, School, Home, Timeline} from \"@material-ui/icons\";\r\nimport CloseFriend from \"../closeFriend/CloseFriend\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport StoreContext from \"../../StoreContext\";\r\n\r\n\r\nexport default function Sidebar() {\r\n\r\n  const[showMoreFlag, changeShowMoreFlag] = useState(false);\r\n\r\n  return (\r\n    <StoreContext.Consumer>\r\n    {\r\n      (SF) => (\r\n      <div className=\"sidebar\">\r\n        <div className=\"sidebarWrapper\">\r\n          <ul className=\"sidebarList\">\r\n            <NavLink className=\"sideNav\" to=\"/Profile\">\r\n              <li className=\"sidebarListItem\">\r\n                <Home className=\"sidebarIcon\" />\r\n                <span className=\"sidebarListItemText\">Homepage</span>\r\n              </li>\r\n            </NavLink>\r\n            <NavLink className=\"sideNav\" to=\"/timeline\">\r\n              <li className=\"sidebarListItem\">\r\n                <Timeline className=\"sidebarIcon\" />\r\n                <span className=\"sidebarListItemText\">Timeline</span>\r\n              </li>\r\n            </NavLink>\r\n            <NavLink className=\"sideNav\" to=\"/messenger\">\r\n              <li className=\"sidebarListItem\">\r\n                <Chat className=\"sidebarIcon\" />\r\n                <span className=\"sidebarListItemText\">Chats</span>\r\n              </li>\r\n            </NavLink>\r\n            { showMoreFlag &&\r\n            <>\r\n              <li className=\"sidebarListItem\">\r\n                <PlayCircleFilledOutlined className=\"sidebarIcon\" />\r\n                <span className=\"sidebarListItemText\">Videos</span>\r\n              </li>\r\n              <li className=\"sidebarListItem\">\r\n                <Group className=\"sidebarIcon\" />\r\n                <span className=\"sidebarListItemText\">Groups</span>\r\n              </li>\r\n              <li className=\"sidebarListItem\">\r\n                <Bookmark className=\"sidebarIcon\" />\r\n                <span className=\"sidebarListItemText\">Bookmarks</span>\r\n              </li>\r\n              <li className=\"sidebarListItem\">\r\n                <HelpOutline className=\"sidebarIcon\" />\r\n                <span className=\"sidebarListItemText\">Questions</span>\r\n              </li>\r\n              <li className=\"sidebarListItem\">\r\n                <WorkOutline className=\"sidebarIcon\" />\r\n                <span className=\"sidebarListItemText\">Jobs</span>\r\n              </li>\r\n              <li className=\"sidebarListItem\">\r\n                <Event className=\"sidebarIcon\" />\r\n                <span className=\"sidebarListItemText\">Events</span>\r\n              </li>\r\n              <li className=\"sidebarListItem\">\r\n                <School className=\"sidebarIcon\" />\r\n                <span className=\"sidebarListItemText\">Courses</span>\r\n              </li>\r\n            </>\r\n            }\r\n          </ul>\r\n          <button \r\n            className=\"sidebarButton\" \r\n            onClick={() => changeShowMoreFlag(!showMoreFlag)}>\r\n            Show More\r\n          </button>\r\n          <hr className=\"sidebarHr\" />\r\n          <ul className=\"sidebarFriendList\">\r\n            {Object.keys(SF.allUsers).map((key) => {\r\n              if (key != SF.currentPerson?.userId) return <CloseFriend key={key} user={SF.allUsers[key]} />\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      )\r\n    }\r\n    </StoreContext.Consumer>\r\n  );\r\n}\r\n","import \"./post.css\";\r\nimport { MoreVert, SdCard } from \"@material-ui/icons\";\r\nimport {Room} from \"@material-ui/icons\"\r\nimport React, { useState } from \"react\";\r\nimport StoreContext from '../../StoreContext';\r\nimport moment from 'moment';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport default function Post(props) {\r\n\r\n  const [like,setLike] = useState(props.post?.like)\r\n  const [isLiked,setIsLiked] = useState(false)\r\n  const[postTopFlag, changePostTopFlag] = useState(false);\r\n\r\n  const likeHandler = (x) => {\r\n    setLike(isLiked ? like-1 : like+1);\r\n    setIsLiked(!isLiked);\r\n    isLiked ? --x : ++x;\r\n    return x; \r\n  }\r\n\r\n  const onClickLikeNew = (e) => {\r\n    const x = likeHandler(like);\r\n    props.onClickLike(e, x);\r\n  }\r\n\r\n  const newOnClickDelBut = (e) => {\r\n    props.onClickDelBut(e);\r\n    changePostTopFlag(false);\r\n  }\r\n\r\n  const icon = \"https://yt3.ggpht.com/a/AGF-l79TeE4LZ7QszKiy-EgX9-pXgQTunY_cNGLQfg=s900-c-k-c0xffffffff-no-rj-mo\";\r\n\r\n  return (\r\n    <StoreContext.Consumer>\r\n    {\r\n      (SF) => (\r\n      <div className=\"post\">\r\n        <div className=\"postWrapper\">\r\n          <div className=\"postTop\">\r\n            <div className=\"postTopLeft\">\r\n              <NavLink className=\"usersLinks\" to=\"/user\">\r\n                <img\r\n                  onClick={() => SF.onClickUser(props.post.id)}\r\n                  className=\"postProfileImg\"\r\n                  src={SF.allUsers[props.post?.id] ? SF.allUsers[props.post.id].icon ? SF.allUsers[props.post.id].icon : icon : icon}\r\n                  alt=\"\"\r\n                />\r\n              </NavLink>\r\n              <span className=\"postUsername\">\r\n              </span>\r\n              <span className=\"postDate\">{moment(props.post?.date).fromNow()}</span>\r\n            </div>\r\n            {!props.timeline && !props.user && \r\n            <div className=\"postTopRight\">\r\n              {postTopFlag && \r\n                <button \r\n                onClick={(e) => newOnClickDelBut(e)} \r\n                className=\"delButtonPost\"\r\n                index={props.index}>\r\n                  Delete\r\n                </button>\r\n              }\r\n              <MoreVert \r\n                className=\"MoreVert\" \r\n                onClick={() => changePostTopFlag(!postTopFlag)}\r\n              />\r\n            </div>\r\n            }\r\n          </div>\r\n          <div className=\"postCenter\">\r\n            <span className=\"postText\">{props.post?.desc}</span>\r\n            <img className=\"postImg\" src={props.post?.photo} alt=\"\" />\r\n          </div>\r\n          {props.post?.location && \r\n            <div className=\"locationIcon\">\r\n              <Room htmlColor=\"green\" className=\"shareIcon\"/>\r\n              <span className=\"shareOptionText\">{props.post.location}</span>\r\n            </div>\r\n          }\r\n          <div className=\"postBottom\">\r\n            <div className=\"postBottomLeft\">\r\n              <img \r\n                index={props.index} \r\n                className=\"likeIcon\" \r\n                src=\"https://optimed.by/assets/cache/images/165x165-46_20131223031159.64d.png\" \r\n                onClick={(e) => onClickLikeNew(e)} \r\n                alt=\"\" \r\n              />\r\n              <img \r\n                index={props.index} \r\n                className=\"likeIcon\" \r\n                src=\"https://lh3.googleusercontent.com/U63LF6vJYWB86_bImNou2wKU-cy-njqa7PAIWmPElM7wvDGaumaFyJIJ0iI5olDDHR8=s75-rw\" \r\n                onClick={(e) => onClickLikeNew(e)} \r\n                alt=\"\" \r\n              />\r\n              <span \r\n                  className=\"postLikeCounter\">\r\n                  {like} people like it\r\n              </span>\r\n            </div>\r\n            {/* <div className=\"postBottomRight\">\r\n              <span className=\"postCommentText\">{props.post?.comment} comments</span>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      )\r\n    }\r\n    </StoreContext.Consumer>\r\n  );\r\n}\r\n","import \"./share.css\";\r\nimport React, {useState} from 'react';\r\nimport {PermMedia,Room} from \"@material-ui/icons\";\r\nimport StoreContext from \"../../StoreContext\";\r\n\r\nexport default function Share(props) {\r\n\r\n  const[photoFlag, onClickPhotoFlag] = useState(false);\r\n  const[sharePhotoLink, changeSharePhotoLink] = useState('');\r\n  const[photoButton, onClickPhotoButton] = useState(false);\r\n  const[shareText, changeShareText] = useState('');\r\n  const[locationFlag, onClickLocationFlag] = useState(false);\r\n  const[locationText, changeLocationText] = useState('');\r\n  const[locationButtonOk, onClickLocationButtonOk] = useState(false);\r\n\r\n  const NewOnClickShare = () => {\r\n    props.onClickShare(shareText, sharePhotoLink, locationText);\r\n    changeShareText('');\r\n    changeSharePhotoLink('');\r\n    changeLocationText('');\r\n    onClickPhotoFlag(false);\r\n    onClickLocationFlag(false);\r\n    onClickPhotoButton(false);\r\n    onClickLocationButtonOk(false);\r\n  }\r\n\r\n  return (\r\n    <StoreContext.Consumer>\r\n    {\r\n      (SF) => (\r\n      <div className=\"share\">\r\n        <div className=\"shareWrapper\">\r\n          <div className=\"shareTop\">\r\n            <img \r\n              className=\"shareProfileImg\" \r\n              src={SF.currentPerson?.icon || \"https://yt3.ggpht.com/a/AGF-l79TeE4LZ7QszKiy-EgX9-pXgQTunY_cNGLQfg=s900-c-k-c0xffffffff-no-rj-mo\"}\r\n              alt=\"\" \r\n            />\r\n            <input\r\n              placeholder=\"What's in your mind?\"\r\n              className=\"shareInput\"\r\n              value={shareText} \r\n              onChange={e => changeShareText(e.currentTarget.value)} \r\n            />\r\n          </div>\r\n          <hr className=\"shareHr\"/>\r\n          {photoFlag && !photoButton && \r\n          <>\r\n            <input \r\n              onKeyPress={e => { if(e.key == 'Enter') { onClickPhotoButton(true) }}}\r\n              value={sharePhotoLink} \r\n              onChange={e => changeSharePhotoLink(e.currentTarget.value)} \r\n              placeholder=\"Введите ссылку картинки...\" \r\n              className=\"sharePhotoLink\" \r\n            />\r\n            <span>\r\n              <button \r\n                onClick={() => onClickPhotoButton(true)}  \r\n                className=\"shareButton shareButtonOk\">\r\n                Ok\r\n              </button>\r\n            </span>\r\n          </>\r\n          }\r\n          {photoButton &&\r\n            <img className=\"shareNewImg\" src={sharePhotoLink} alt=\"\" />\r\n          }\r\n          {locationFlag && !locationButtonOk &&\r\n            <>\r\n              <input\r\n                onKeyPress={e => { if(e.key == 'Enter') { onClickLocationButtonOk(true) }}}\r\n                placeholder=\"Your location...\"\r\n                className=\"shareLocation\"\r\n                value={locationText} \r\n                onChange={e => changeLocationText(e.currentTarget.value)} \r\n              />\r\n              <span>\r\n                <button onClick={() => onClickLocationButtonOk(true)}  className=\"shareButton shareButtonOk\">Ok</button>\r\n              </span>\r\n            </>\r\n          }\r\n          {locationButtonOk && \r\n            <div className=\"shareOption\">\r\n              <Room htmlColor=\"green\" className=\"shareIcon\"/>\r\n              <span className=\"shareOptionText\">{locationText}</span>\r\n            </div>\r\n          }\r\n          <div className=\"shareBottom\">\r\n              <div className=\"shareOptions newShareOptions\">\r\n                  <div onClick={() => onClickPhotoFlag(true)} className=\"shareOption\">\r\n                      <PermMedia htmlColor=\"tomato\" className=\"shareIcon\"/>\r\n                      <span className=\"shareOptionText\">Photo or Video</span>\r\n                  </div>\r\n                  <div onClick={() => onClickLocationFlag(true)} className=\"shareOption\">\r\n                      <Room htmlColor=\"green\" className=\"shareIcon\"/>\r\n                      <span className=\"shareOptionText\">Location</span>\r\n                  </div>\r\n              </div>\r\n              <button onClick={NewOnClickShare}  className=\"shareButton\">Share</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      )\r\n    }\r\n    </StoreContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Post from \"../post/Post\";\r\nimport Share from \"../share/Share\";\r\nimport \"./feed.css\";\r\nimport StoreContext from \"../../StoreContext\";\r\nimport moment from 'moment';\r\n\r\nexport default function Feed(props) {\r\n\r\n  return (\r\n    <StoreContext.Consumer>\r\n    {\r\n      (SF) => \r\n      {\r\n        let followersPosts = [];\r\n        if(props.home){\r\n          const followersArr = SF.currentPerson ? SF.currentPerson.followers ? SF.currentPerson.followers : [] : [] ;\r\n          let newFolPosts = [];\r\n          followersArr.map(id => {\r\n            if(SF.allUsers[id] ? SF.allUsers[id].posts ? 1 : 0 : 0) \r\n              newFolPosts = newFolPosts.concat(SF.allUsers[id].posts);\r\n          })\r\n          followersPosts = newFolPosts.sort((a,b) => moment(b.date) - moment(a.date));\r\n        }\r\n\r\n        return(\r\n          <div className=\"feed\">\r\n            <div className=\"feedWrapper\">\r\n              {props.profile && <Share onClickShare={SF.onClickShare}/>}\r\n              {!props.home && !props.user && SF.currentPerson?.posts ? SF.currentPerson.posts.map((p, index) => (\r\n                <Post \r\n                  profile\r\n                  index={index} \r\n                  key={p?.id} \r\n                  post={p} \r\n                  onClickDelBut={SF.onClickDelBut}\r\n                  onClickLike={SF.onClickLike} \r\n                />\r\n              )) : null}\r\n              {!props.home && props.user && SF.currentUser.posts ? SF.currentUser.posts.map((p, index) => (\r\n                <Post \r\n                  user={props.user}\r\n                  index={index} \r\n                  key={p?.id} \r\n                  post={p} \r\n                  onClickDelBut={SF.onClickDelBut}\r\n                  onClickLike={SF.onClickLike} \r\n                />\r\n              )) : null}\r\n              {props.home && followersPosts.map((p, index) => (\r\n                <Post \r\n                  timeline\r\n                  user={props.user}\r\n                  index={index} \r\n                  key={p.id} \r\n                  post={p} \r\n                  onClickDelBut={SF.onClickDelBut}\r\n                  onClickLike={SF.onClickLike} \r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n    </StoreContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport \"./online.css\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport StoreContext from '../../StoreContext';\r\n\r\nexport default function Online({user}) {\r\n  return (\r\n    <StoreContext.Consumer>\r\n    {\r\n      (SF) => (\r\n      <NavLink className=\"usersLinks\" to=\"/user\">\r\n        <li onClick={() => SF.onClickUser(user.userId)} className=\"rightbarFriend\">\r\n          <div className=\"rightbarProfileImgContainer\">\r\n            <img className=\"rightbarProfileImg\" src={user.icon} alt=\"\" />\r\n            <span className=\"rightbarOnline\"></span>\r\n          </div>\r\n          <span className=\"rightbarUsername\">{user.userName}</span>\r\n        </li>\r\n      </NavLink>\r\n      )\r\n    }\r\n    </StoreContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport StoreContext from '../../StoreContext';\r\nimport \"./RightbarFollowings.css\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport default function RightbarFollowings(){\r\n    return(\r\n        <StoreContext.Consumer>\r\n        {\r\n            (SF) => (\r\n            <div className=\"rightbarFollowings\">\r\n                {SF.currentPerson?.followers ? SF.currentPerson.followers.map(id => \r\n                    <NavLink className=\"usersLinks\" to=\"/user\">\r\n                        <div onClick={() => SF.onClickUser(id)} className=\"rightbarFollowing\">\r\n                        <img\r\n                            src={SF.allUsers[id] ? \r\n                                    SF.allUsers[id].icon ? \r\n                                    SF.allUsers[id].icon \r\n                                    : '' \r\n                                : ''}\r\n\r\n                            alt=\"\"\r\n                            className=\"rightbarFollowingImg\"\r\n                        />\r\n                        <span className=\"rightbarFollowingName\">\r\n                            {SF.allUsers[id] ? \r\n                            SF.allUsers[id].userName ? \r\n                                SF.allUsers[id].userName.length<11 ? \r\n                                SF.allUsers[id].userName :\r\n                                SF.allUsers[id].userName.slice(0, 10)+'...'\r\n                            : '' \r\n                            : ''}\r\n                        </span>\r\n                        </div>\r\n                    </NavLink>\r\n                ) : []}\r\n                </div>\r\n            )\r\n        }\r\n        </StoreContext.Consumer>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport \"./rightbar.css\";\r\nimport Online from \"../online/Online\";\r\nimport StoreContext from \"../../StoreContext\";\r\nimport RightbarFollowings from \"../rightbarFollowings/RightbarFollowings\";\r\n\r\nexport default function Rightbar(props) {\r\n\r\n  const HomeRightbar = () => {\r\n    return (\r\n      <StoreContext.Consumer>\r\n      {\r\n        (SF) => {\r\n          const followersArr = SF.currentPerson.followers || [];\r\n          let newFolArr = [];\r\n          followersArr.map(id => {\r\n            if(SF.allUsers[id] ? SF.allUsers[id].online ? 1 : 0 : 0) newFolArr.push(SF.allUsers[id]);\r\n          })\r\n\r\n          return(\r\n            <>\r\n              <div className=\"birthdayContainer\">\r\n                <img className=\"birthdayImg\" src=\"https://herlitzbags.ru/design/@templatesforall/images/gift.svg\" alt=\"\" />\r\n                <span className=\"birthdayText\">\r\n                No one has a birthday today.\r\n                </span>\r\n              </div>\r\n              <img className=\"rightbarAd\" src=\"https://upjourney.com/wp-content/uploads/2021/03/how-to-be-a-social-butterfly.jpg\" alt=\"\" />\r\n              <h4 className=\"rightbarTitle\">Online Friends</h4>\r\n              <ul className=\"rightbarFriendList\">\r\n                {SF.allUsers && newFolArr.map((u) => (\r\n                  <Online key={u.userId} user={u} />\r\n                ))}\r\n              </ul>\r\n            </>\r\n          )\r\n        }\r\n      }\r\n      </StoreContext.Consumer>\r\n    );\r\n  };\r\n\r\n  const ProfileRightbar = () => {\r\n\r\n    const[userCityFlag, changeUserCityFlag] = useState(false);\r\n    const[userCityText, changeUserCityText] = useState('');\r\n    const[userCountryFlag, changeUserCountryFlag] = useState(false);\r\n    const[userCountryText, changeUserCountryText] = useState('');\r\n    const[userRelationshipFlag, changeUserRelationshipFlag] = useState(false);\r\n    const[userRelationshipText, changeUserRelationshipText] = useState('');\r\n\r\n    return (\r\n      <StoreContext.Consumer>\r\n      {\r\n        (SF) => {\r\n\r\n          const onClickCityButtonNew = () => {\r\n            SF.onClickInputButton(userCityText, 'city');\r\n            changeUserCityFlag(false);\r\n            changeUserCityText('');\r\n          }\r\n      \r\n          const onClickCountryButtonNew = () => {\r\n            SF.onClickInputButton(userCountryText, 'country');\r\n            changeUserCountryFlag(false);\r\n            changeUserCountryText('');\r\n          }\r\n\r\n          const onClickRelationshipButtonNew = () => {\r\n            SF.onClickInputButton(userRelationshipText, 'relationship');\r\n            changeUserRelationshipFlag(false);\r\n            changeUserRelationshipText('');\r\n          }\r\n\r\n          return (\r\n          <>\r\n            <h4 className=\"rightbarTitle\">User information</h4>\r\n            <div className=\"rightbarInfo\">\r\n              <div className=\"rightbarInfoItem\">\r\n                <span className=\"rightbarInfoKey\">City:</span>\r\n                {!userCityFlag && \r\n                <span \r\n                  className=\"rightbarInfoValue\"\r\n                  onDoubleClick={() => changeUserCityFlag(true)}>\r\n                  {SF.currentPerson?.city || (SF.currentPerson?.userId && 'Your city...')}\r\n                </span>}\r\n                {userCityFlag && \r\n                  <div className='inputPlusBtnRightbar'>\r\n                    <input \r\n                      onKeyPress={e => { if(e.key == 'Enter') { onClickCityButtonNew() }}}\r\n                      value={userCityText} \r\n                      onChange={e => changeUserCityText(e.currentTarget.value)} \r\n                      placeholder={SF.currentPerson.city || \"Your city...\"} \r\n                      className=\"profileInfoInputs\" \r\n                    />\r\n                    <span>\r\n                      <button \r\n                        onClick={() => onClickCityButtonNew()}  \r\n                        className=\"shareButton shareButtonOk\">\r\n                        Ok\r\n                      </button>\r\n                    </span>\r\n                  </div>\r\n                }\r\n              </div>\r\n              <div className=\"rightbarInfoItem\">\r\n                <span className=\"rightbarInfoKey\">From:</span>\r\n                {!userCountryFlag && \r\n                <span \r\n                  className=\"rightbarInfoValue\"\r\n                  onDoubleClick={() => changeUserCountryFlag(true)}>\r\n                  {SF.currentPerson?.country || (SF.currentPerson?.userId && 'Your country...')}\r\n                </span>}\r\n                {userCountryFlag && \r\n                  <div className='inputPlusBtnRightbar'>\r\n                    <input \r\n                      onKeyPress={e => { if(e.key == 'Enter') { onClickCountryButtonNew() }}}\r\n                      value={userCountryText} \r\n                      onChange={e => changeUserCountryText(e.currentTarget.value)} \r\n                      placeholder={SF.currentPerson.country || \"Your country...\"} \r\n                      className=\"profileInfoInputs\" \r\n                    />\r\n                    <span>\r\n                      <button \r\n                        onClick={() => onClickCountryButtonNew()}  \r\n                        className=\"shareButton shareButtonOk\">\r\n                        Ok\r\n                      </button>\r\n                    </span>\r\n                  </div>\r\n                }\r\n              </div>\r\n              <div className=\"rightbarInfoItem\">\r\n                <span className=\"rightbarInfoKey\">Relationship:</span>\r\n                {!userRelationshipFlag && \r\n                <span \r\n                  className=\"rightbarInfoValue\"\r\n                  onDoubleClick={() => changeUserRelationshipFlag(true)}>\r\n                  {SF.currentPerson?.relationship || (SF.currentPerson?.userId && 'Your relationship...')}\r\n                </span>}\r\n                {userRelationshipFlag && \r\n                  <div className='inputPlusBtnRightbar'>\r\n                    <input \r\n                      onKeyPress={e => { if(e.key == 'Enter') { onClickRelationshipButtonNew() }}}\r\n                      value={userRelationshipText} \r\n                      onChange={e => changeUserRelationshipText(e.currentTarget.value)} \r\n                      placeholder={SF.currentPerson.relationship || \"Your relationship...\"} \r\n                      className=\"profileInfoInputs\" \r\n                    />\r\n                    <span>\r\n                      <button \r\n                        onClick={() => onClickRelationshipButtonNew()}  \r\n                        className=\"shareButton shareButtonOk\">\r\n                        Ok\r\n                      </button>\r\n                    </span>\r\n                  </div>\r\n                }\r\n              </div>\r\n            </div>\r\n            <h4 className=\"rightbarTitle\">User friends</h4>\r\n            \r\n            <RightbarFollowings />\r\n\r\n          </>\r\n          )\r\n        }\r\n      }\r\n      </StoreContext.Consumer>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"rightbar\">\r\n      <div className=\"rightbarWrapper\">\r\n        {props.profile ? <ProfileRightbar /> : <HomeRightbar />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Topbar from \"../../components/topbar/Topbar\";\r\nimport Sidebar from \"../../components/sidebar/Sidebar\";\r\nimport Feed from \"../../components/feed/Feed\";\r\nimport Rightbar from \"../../components/rightbar/Rightbar\";\r\nimport \"./home.css\"\r\n\r\nexport default function Home() {\r\n  return (\r\n    <>\r\n      <Topbar/>\r\n      <div className=\"homeContainer\">\r\n        <Sidebar/>\r\n        <Feed profile={false} home/>\r\n        <Rightbar profile={false} />\r\n      </div>\r\n    </>\r\n  );\r\n}","import \"./login.css\";\r\nimport React, {useState} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport default function Login(props) {\r\n\r\n  const[userEmail, setUserEmail] = useState('');\r\n  const[userPassword, setUserPassword] = useState('');\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"loginWrapper\">\r\n        <div className=\"loginLeft\">\r\n          <h3 className=\"loginLogo\">MySoc</h3>\r\n          <span className=\"loginDesc\">\r\n            Connect with friends and the world around you on MySoc.\r\n          </span>\r\n        </div>\r\n        <div className=\"loginRight\">\r\n          <div className=\"loginBox\">\r\n            <input value={userEmail} onChange={e => setUserEmail(e.currentTarget.value)} placeholder=\"Email\" className=\"loginInput\" />\r\n            <input type=\"password\" value={userPassword} onChange={e => setUserPassword(e.currentTarget.value)} placeholder=\"Password\" className=\"loginInput\" />\r\n              <button onClick={() => props.clickLoginButton(userEmail, userPassword)}  className=\"loginButton\">Log In</button>\r\n            <NavLink className=\"loginRegisterButtonLink\" to=\"/register\">\r\n              <button className=\"loginRegisterButton\">\r\n                Create a New Account\r\n              </button>\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState} from 'react';\r\nimport \"./profile.css\";\r\nimport Topbar from \"../../components/topbar/Topbar\";\r\nimport Sidebar from \"../../components/sidebar/Sidebar\";\r\nimport Feed from \"../../components/feed/Feed\";\r\nimport Rightbar from \"../../components/rightbar/Rightbar\";\r\nimport StoreContext from \"../../StoreContext\";\r\n\r\nexport default function Profile() {\r\n\r\n  const[userNameFlag, changeUserNameFlag] = useState(false);\r\n  const[userNameText, changeUserNameText] = useState('');\r\n  const[userStatusFlag, changeUserStatusFlag] = useState(false);\r\n  const[userStatusText, changeUserStatusText] = useState('');  \r\n  const[profileCoverImgFlag, changeProfileCoverImgFlag] = useState(false);\r\n  const[profileCoverImgText, changeProfileCoverImgText] = useState('');  \r\n  const[profileIconFlag, changeProfileIconFlag] = useState(false);\r\n  const[profileIconText, changeProfileIconText] = useState('');  \r\n\r\n  return (\r\n    <StoreContext.Consumer>\r\n    {\r\n      (SF) => {\r\n\r\n        const onClickNameButtonNew = () => {\r\n          SF.onClickInputButton(userNameText, 'userName');\r\n          changeUserNameFlag(false);\r\n          changeUserNameText('');\r\n        }\r\n      \r\n        const onClickStatusButtonNew = () => {\r\n          SF.onClickInputButton(userStatusText, 'status');\r\n          changeUserStatusFlag(false);\r\n          changeUserStatusText('');\r\n        }\r\n        \r\n        const onClickCoverButtonNew = () => {\r\n          SF.onClickInputButton(profileCoverImgText, 'coverUrl');\r\n          changeProfileCoverImgFlag(false);\r\n          changeProfileCoverImgText('');\r\n        }\r\n      \r\n        const onClickProfileIconButtonNew = () => {\r\n          SF.onClickInputButton(profileIconText, 'icon');\r\n          changeProfileIconFlag(false);\r\n          changeProfileIconText('');\r\n        }\r\n\r\n        return (\r\n        <>\r\n          <Topbar/>\r\n          <div className=\"profile\">\r\n            <Sidebar/>\r\n            <div className=\"profileRight\">\r\n              <div className=\"profileRightTop\">\r\n                <div className=\"profileCover\">\r\n                  <img\r\n                    className=\"profileCoverImg\"\r\n                    src={SF.currentPerson?.coverUrl || (SF.currentPerson?.userId && \"https://plitka.by/upload/iblock/ebf/ebfbf270daa02e33a7bc4f58ffc982c6.jpg\")}\r\n                    onDoubleClick={() => changeProfileCoverImgFlag(true)}\r\n                    alt=\"\"\r\n                  />\r\n                {profileCoverImgFlag && \r\n                  <div className='inputPlusBtnCover'>\r\n                    <input \r\n                      onKeyPress={e => { if(e.key == 'Enter') { onClickCoverButtonNew() }}}\r\n                      value={profileCoverImgText} \r\n                      onChange={e => changeProfileCoverImgText(e.currentTarget.value)} \r\n                      placeholder={SF.currentPerson.coverUrl || \"coverUrl...\"} \r\n                      className=\"profileInfoInputs\" \r\n                    />\r\n                    <span>\r\n                      <button \r\n                        onClick={() => onClickCoverButtonNew()}  \r\n                        className=\"shareButton shareButtonOk\">\r\n                        Ok\r\n                      </button>\r\n                    </span>\r\n                  </div>\r\n                }\r\n                  <img\r\n                    className=\"profileUserImg\"\r\n                    src={SF.currentPerson?.icon || (SF.currentPerson?.userId && \"https://yt3.ggpht.com/a/AGF-l79TeE4LZ7QszKiy-EgX9-pXgQTunY_cNGLQfg=s900-c-k-c0xffffffff-no-rj-mo\")}\r\n                    onDoubleClick={() => changeProfileIconFlag(true)}\r\n                    alt=\"\"\r\n                  />\r\n                  {profileIconFlag && \r\n                  <div className='inputPlusBtnIcon'>\r\n                    <input \r\n                      onKeyPress={e => { if(e.key == 'Enter') { onClickProfileIconButtonNew() }}}\r\n                      value={profileIconText} \r\n                      onChange={e => changeProfileIconText(e.currentTarget.value)} \r\n                      placeholder={SF.currentPerson.coverUrl || \"iconUrl...\"} \r\n                      className=\"profileInfoInputs\" \r\n                    />\r\n                    <span>\r\n                      <button \r\n                        onClick={() => onClickProfileIconButtonNew()}  \r\n                        className=\"shareButton shareButtonOk\">\r\n                        Ok\r\n                      </button>\r\n                    </span>\r\n                  </div>\r\n                }\r\n                </div>\r\n                <div className=\"profileInfo\">\r\n                {!userNameFlag && \r\n                  <h4 \r\n                    className=\"profileInfoName\" \r\n                    onDoubleClick={() => changeUserNameFlag(true)}>\r\n                    {SF.currentPerson?.userName || (SF.currentPerson?.userId && \"unknown\")}\r\n                  </h4>\r\n                }\r\n                {userNameFlag && \r\n                  <div className='inputPlusBtn'>\r\n                    <input \r\n                      onKeyPress={e => { if(e.key == 'Enter') { onClickNameButtonNew() }}}\r\n                      value={userNameText} \r\n                      onChange={e => changeUserNameText(e.currentTarget.value)} \r\n                      placeholder={SF.currentPerson.userName || \"Username...\"} \r\n                      className=\"profileInfoInputs\" \r\n                    />\r\n                    <span>\r\n                      <button \r\n                        onClick={() => onClickNameButtonNew()}  \r\n                        className=\"shareButton shareButtonOk\">\r\n                        Ok\r\n                      </button>\r\n                    </span>\r\n                  </div>\r\n                }\r\n                {!userStatusFlag && \r\n                  <span \r\n                    className=\"profileInfoDesc\" \r\n                    onDoubleClick={() => changeUserStatusFlag(true)}>\r\n                    {SF.currentPerson?.status || (SF.currentPerson?.userId && \"Your status...\")}\r\n                  </span>\r\n                }\r\n                {userStatusFlag && \r\n                  <div className='inputPlusBtnStatus'>\r\n                    <input \r\n                      onKeyPress={e => { if(e.key == 'Enter') {onClickStatusButtonNew('status')}}}\r\n                      value={userStatusText} \r\n                      onChange={e => changeUserStatusText(e.currentTarget.value)} \r\n                      placeholder={SF.currentPerson.status || \"Your status...\"} \r\n                      className=\"profileInfoInputs\" \r\n                    />\r\n                    <span>\r\n                      <button \r\n                        onClick={() => onClickStatusButtonNew('status')}  \r\n                        className=\"shareButton shareButtonOk\">\r\n                        Ok\r\n                      </button>\r\n                    </span>\r\n                  </div>\r\n                }\r\n              </div>\r\n            </div>\r\n              <div className=\"profileRightBottom\">\r\n                <Feed profile />\r\n                <Rightbar profile />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n        )\r\n      }\r\n    }\r\n    </StoreContext.Consumer>\r\n  );\r\n}\r\n","import \"./register.css\";\r\nimport React, {useState} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport default function Register(props) {\r\n\r\n  const[userName, setUserName] = useState('');\r\n  const[userEmail, setUserEmail] = useState('');\r\n  const[userPassword, setUserPassword] = useState('');\r\n  const[userPasswordAgain, setUserPasswordAgain] = useState('');\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"loginWrapper\">\r\n        <div className=\"loginLeft\">\r\n          <h3 className=\"loginLogo\">MySoc</h3>\r\n          <span className=\"loginDesc\">\r\n            Connect with friends and the world around you on MySoc.\r\n          </span>\r\n        </div>\r\n        <div className=\"loginRight\">\r\n          <div className=\"loginBox\">\r\n            <input value={userName} onChange={e => setUserName(e.currentTarget.value)} placeholder=\"Username\" className=\"loginInput\" />\r\n            <input type=\"email\" value={userEmail} onChange={e => setUserEmail(e.currentTarget.value)} placeholder=\"Email\" className=\"loginInput\" />\r\n            <input type=\"password\" value={userPassword} onChange={e => setUserPassword(e.currentTarget.value)} placeholder=\"Password\" className=\"loginInput\" />\r\n            <input type=\"password\" value={userPasswordAgain} onChange={e => setUserPasswordAgain(e.currentTarget.value)} placeholder=\"Password Again\" className=\"loginInput\" />\r\n              <button onClick={() => props.clickRegisterButton(userName, userEmail, userPassword, userPasswordAgain)} className=\"loginButton\">Sign Up</button>\r\n            <NavLink className=\"loginRegisterButtonLink\" to=\"/MySoc\">\r\n              <button className=\"loginRegisterButton\">\r\n                Log into Account\r\n              </button>\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport \"./conversation.css\";\r\nimport StoreContext from '../../StoreContext'\r\n\r\nexport default function Conversation({searchText}) {\r\n\r\n  return (\r\n    <StoreContext.Consumer>\r\n        {\r\n        (SF) => {\r\n          const idArr = SF.currentPerson ? SF.currentPerson.followers ? [...SF?.currentPerson?.followers] : [] : [];\r\n          let searchArr = [];\r\n          idArr.map(id => {\r\n            searchArr.push(SF.allUsers[id]?.userName)\r\n          })\r\n          let newSearchArr = [];\r\n          searchArr.map(name =>{\r\n            if(name?.toUpperCase()?.includes(searchText.toUpperCase())) newSearchArr.push(name.toUpperCase());\r\n          })\r\n\r\n          return(\r\n            <>\r\n              {SF.currentPerson.followers && SF.currentPerson.followers.map(id =>\r\n                { if(newSearchArr.includes(SF.allUsers[id]?.userName.toUpperCase()))\r\n                  return(\r\n                    <div \r\n                      onClick={() => SF.onClickUser(id)} \r\n                      className={id==SF.currentUser?.userId?\"activeChat\":\"conversation\"}>\r\n                      <img\r\n                        className=\"conversationImg\"\r\n                        src={\r\n                          SF.allUsers[id] ? \r\n                            SF.allUsers[id].icon ? \r\n                            SF.allUsers[id].icon \r\n                            : '' \r\n                          : ''}\r\n                        alt=\"\"\r\n                      />\r\n                      <span className=\"conversationName\">\r\n                        {SF.allUsers[id] ? \r\n                          SF.allUsers[id].userName ? \r\n                          SF.allUsers[id].userName\r\n                          : '' \r\n                        : ''}\r\n                      </span>\r\n                    </div>\r\n                  )\r\n                  else return null\r\n                }\r\n              )}\r\n            </>\r\n          )\r\n        }\r\n      }\r\n    </StoreContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport \"./message.css\";\r\n\r\nexport default function Message({own, message, icon}) {\r\n  return (\r\n    <div className={`message ${own && 'own'}`}>\r\n      <div className=\"messageTop\">\r\n        {!own &&\r\n          <img\r\n          className=\"messageImg\"\r\n          src={icon}\r\n          alt=\"\"\r\n          />\r\n        }\r\n        <p className=\"messageText\">{message}</p>\r\n      </div>\r\n      <div className=\"messageBottom\"></div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport \"./chatOnline.css\";\r\nimport StoreContext from \"../../StoreContext\"\r\n\r\nexport default function ChatOnline(props) {\r\n\r\n  return (\r\n    <StoreContext.Consumer>\r\n      {\r\n        (SF) => (\r\n          <div onClick={() => SF.onClickUser(props.user.userId)} className=\"chatOnline\">\r\n            <div className=\"chatOnlineFriend\">\r\n              <div className=\"chatOnlineImgContainer\">\r\n                <img\r\n                  className=\"chatOnlineImg\"\r\n                  src={props.user.icon}\r\n                  alt=\"\"\r\n                />\r\n                <div className=\"chatOnlineBadge\"></div>\r\n              </div>\r\n              <span className=\"chatOnlineName\">{props.user.userName}</span>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    </StoreContext.Consumer>\r\n  );\r\n}\r\n","import \"./messenger.css\";\r\nimport Topbar from \"../../components/topbar/Topbar\";\r\nimport Conversation from \"../../components/conversations/Conversation\";\r\nimport Message from \"../../components/message/Message\";\r\nimport ChatOnline from \"../../components/chatOnline/ChatOnline\";\r\nimport React, {useState} from 'react';\r\nimport StoreContext from \"../../StoreContext\"\r\n\r\nexport default function Messenger() {\r\n\r\n  const[message, changeMessage] = useState(''); \r\n  const[searchText, changeSearchText] = useState('');\r\n\r\n  return (\r\n    <StoreContext.Consumer>\r\n      {\r\n        (SF) => {\r\n          const followersArr = SF.currentPerson.followers;\r\n          let newFolArr = [];\r\n          followersArr ? followersArr.map(id => {\r\n            if(SF.allUsers[id] ? SF.allUsers[id].online ? 1 : 0 : 0) newFolArr.push(SF.allUsers[id]);\r\n          }) : newFolArr = [];\r\n\r\n          const onSendClickNew = () => {\r\n            changeMessage('');\r\n            SF.onSendClick(SF.currentUser.userId, message)\r\n          }\r\n\r\n          const userId = SF.currentUser ? SF.currentUser.userId ? SF.currentUser.userId : '' : '';\r\n          const mesArr = SF.currentPerson.messages ? SF.currentPerson.messages[userId] ? SF.currentPerson.messages[userId] : [] : [];\r\n          \r\n          return(\r\n          <>\r\n            <Topbar/>\r\n            <div className=\"messenger\">\r\n              <div className=\"chatMenu\">\r\n                <div className=\"chatMenuWrapper\">\r\n                  <input \r\n                    value={searchText}\r\n                    onChange={e => changeSearchText(e.currentTarget.value)}\r\n                    placeholder=\"Search for friends\" \r\n                    className=\"chatMenuInput\" \r\n                  />\r\n                    <div>\r\n                      <Conversation searchText={searchText}/>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"chatBox\">\r\n                <div className=\"chatBoxWrapper\">\r\n                  <>\r\n                    <div className=\"chatBoxTop\">\r\n                      <div>\r\n                        {mesArr ? mesArr.map(mes => \r\n                          <Message\r\n                            icon={SF.currentUser.icon} \r\n                            own={Object.keys(mes)[0]=='true'} \r\n                            message={Object.values(mes)[0]}\r\n                          />) \r\n                        : []}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"chatBoxBottom\">\r\n                      <textarea\r\n                        onKeyPress={e => {\r\n                          if(e.key == 'Enter') {\r\n                          onSendClickNew()\r\n                          } \r\n                        }}\r\n                        value={message}\r\n                        onChange={e => changeMessage(e.currentTarget.value)}\r\n                        className=\"chatMessageInput\"\r\n                        placeholder=\"write something...\">\r\n                      </textarea>\r\n                      <button \r\n                        onClick={onSendClickNew} \r\n                        className=\"chatSubmitButton\">\r\n                        Send\r\n                      </button>\r\n                    </div>\r\n                  </>\r\n                </div>\r\n              </div>\r\n              <div className=\"chatOnline\">\r\n                <div className=\"chatOnlineWrapper\">\r\n                  {SF.allUsers && newFolArr.map((u) => (\r\n                    <ChatOnline key={u.userId} user={u} />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n          )\r\n        }\r\n      }\r\n    </StoreContext.Consumer>\r\n  );\r\n}\r\n","import React, {useState} from 'react';\r\nimport \"./userRightbar.css\";\r\nimport StoreContext from \"../../StoreContext\";\r\nimport RightbarFollowings from '../../components/rightbarFollowings/RightbarFollowings';\r\n\r\nexport default function userRightbar(props) {\r\n  const HomeRightbar = () => {\r\n    return (\r\n      <>\r\n        <div className=\"birthdayContainer\">\r\n          <img className=\"birthdayImg\" src=\"assets/gift.png\" alt=\"\" />\r\n          <span className=\"birthdayText\">\r\n            <b>Pola Foster</b> and <b>3 other friends</b> have a birthday today.\r\n          </span>\r\n        </div>\r\n        <img className=\"rightbarAd\" src=\"assets/ad.png\" alt=\"\" />\r\n        <h4 className=\"rightbarTitle\">Online Friends</h4>\r\n        <ul className=\"rightbarFriendList\">\r\n        </ul>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const ProfileRightbar = () => {\r\n\r\n    let localCurrentPerson = JSON.parse(localStorage.getItem('currentPerson'));\r\n    let currentPerson = props.allUsers[localCurrentPerson.userId];\r\n    const localCurrentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    const userId = localCurrentUser.userId;\r\n    currentPerson = currentPerson ? currentPerson : {};\r\n    currentPerson = currentPerson.followers ? currentPerson : {...currentPerson, followers: []};\r\n    const isFollow = !currentPerson.followers.includes(userId);\r\n\r\n    const[userFollowFlag, changeUserFollowFlag] = useState(isFollow);\r\n\r\n    return (\r\n      <StoreContext.Consumer>\r\n      {\r\n        (SF) => {\r\n\r\n          const changeUserFollowFlagNew = () => {\r\n            changeUserFollowFlag(!userFollowFlag);\r\n            SF.followOnUser()\r\n          }\r\n\r\n          return (\r\n          <div className='userWrapper'>\r\n            <h4 className=\"rightbarTitle\">User information</h4>\r\n            <div className=\"rightbarInfo\">\r\n              <div className=\"rightbarInfoItem\">\r\n                <span className=\"rightbarInfoKey\">City:</span>\r\n                <span className=\"rightbarInfoValue\">\r\n                  {SF.currentUser.city || (SF.currentUser.userId && '...')}\r\n                </span>\r\n              </div>\r\n              <div className=\"rightbarInfoItem\">\r\n                <span className=\"rightbarInfoKey\">From:</span>\r\n                <span className=\"rightbarInfoValue\">\r\n                  {SF.currentUser.country || (SF.currentUser.userId && '...')}\r\n                </span>\r\n              </div>\r\n              <div className=\"rightbarInfoItem\">\r\n                <span className=\"rightbarInfoKey\">Relationship:</span>\r\n                <span className=\"rightbarInfoValue\">\r\n                  {SF.currentUser.relationship || (SF.currentUser.userId && '...')}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <button \r\n              onClick={changeUserFollowFlagNew} \r\n              className={`followBtn ${userFollowFlag ? 'redFollow' : 'greenFollow'}`}>\r\n              {userFollowFlag ? 'FOLLOW' : 'UNFOLLOW'}\r\n            </button>\r\n            <h4 className=\"rightbarTitle\">User friends</h4>\r\n\r\n            <RightbarFollowings />\r\n\r\n          </div>\r\n          )\r\n        }\r\n      }\r\n      </StoreContext.Consumer>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"rightbar\">\r\n      <div className=\"rightbarWrapper\">\r\n        {props.profile ? <ProfileRightbar /> : <HomeRightbar />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport \"./user.css\";\r\nimport Topbar from \"../../components/topbar/Topbar\";\r\nimport Sidebar from \"../../components/sidebar/Sidebar\";\r\nimport Feed from \"../../components/feed/Feed\";\r\nimport UserRightbar from \"./userRightbar\";\r\nimport StoreContext from \"../../StoreContext\";\r\n\r\nexport default function Profile(props) { \r\n\r\n  return (\r\n    <StoreContext.Consumer>\r\n    {\r\n      (SF) => {\r\n\r\n        return (\r\n        <>\r\n          <Topbar/>\r\n          <div className=\"profile\">\r\n            <Sidebar/>\r\n            <div className=\"profileRight\">\r\n              <div className=\"profileRightTop\">\r\n                <div className=\"profileCover\">\r\n                  <img\r\n                    className=\"profileCoverImg\"\r\n                    src={SF.currentUser.coverUrl || (SF.currentUser.userId && \"assets/person/noCover.jpg\")}\r\n                    alt=\"\"\r\n                  />\r\n                  <img\r\n                    className=\"profileUserImg\"\r\n                    src={SF.currentUser.icon || (SF.currentUser.userId && \"assets/person/noAvatar.png\")}\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"profileInfo\">\r\n                  <h4 className=\"profileInfoName\">\r\n                    {SF.currentUser.userName || (SF.currentUser.userId && \"unknown\")}\r\n                  </h4>\r\n                  <span className=\"profileInfoDesc\">\r\n                    {SF.currentUser.status || (SF.currentUser.userId && \"Your status...\")}\r\n                  </span>\r\n              </div>\r\n            </div>\r\n              <div className=\"profileRightBottom\">\r\n                <Feed profile={false} user/>\r\n                <UserRightbar profile allUsers={props.allUsers} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n        )\r\n      }\r\n    }\r\n    </StoreContext.Consumer>\r\n  );\r\n}\r\n","import Rebase from 're-base'\r\nimport firebase from 'firebase'\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyD7Y3vb7mNdWMUZ5OPSKaKoXwos0EMlYSM\",\r\n    authDomain: \"very-hot-burgers-c47ca.firebaseapp.com\",\r\n    databaseURL: \"https://very-hot-burgers-c47ca-default-rtdb.europe-west1.firebasedatabase.app\",\r\n})\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\nexport {firebaseApp};\r\nexport default base;","import Home from \"./pages/home/Home\";\r\nimport Login from \"./pages/login/Login\";\r\nimport Profile from \"./pages/profile/Profile\";\r\nimport Register from \"./pages/register/Register\";\r\nimport Messenger from \"./pages/messenger/Messenger\";\r\nimport User from \"./pages/user/user\"\r\nimport { Route, useHistory, withRouter} from 'react-router-dom';\r\nimport React from 'react'\r\nimport base from './base'\r\nimport StoreContext from \"./StoreContext\";\r\n\r\nclass App extends React.Component{\r\n\r\n    state = {          \r\n        //инициализация state\r\n        allUsers: {},\r\n    };\r\n\r\n    componentDidMount(){    \r\n        //синхронизация state и БД\r\n        this.ref = base.syncState(`MySoc/allUsers`, {\r\n            context: this,\r\n            state: 'allUsers'\r\n        })\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        // удаление ссылки на БД\r\n        base.removeBinding(this.ref);\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.log(this.state)\r\n    }\r\n\r\n    render(){\r\n        const clickRegisterButton = (userName, userEmail, userPassword, repeatPassword) => {\r\n            if(userName.length < 8) alert('The Username must contain at least 8 symbols!');\r\n            else if(!(/^[A-Z0-9._%+-]+@[A-Z0-9-]+.+.[A-Z]{2,4}$/i).test(userEmail)) alert('Enter the Email correctly!')\r\n            else if (userPassword.length < 8) alert('The Password must contain at least 8 symbols!')\r\n            else if(userPassword != repeatPassword) alert('Passwords do not match!')\r\n            else {\r\n                const userId = new Date().valueOf(); \r\n                const newPerson = {                  \r\n                    userName: userName, userEmail: userEmail, userPassword: userPassword, userId: userId,\r\n                    posts: [], status: '', city: '', country: '', relationship: '',\r\n                    coverUrl: '', icon: '', online: true, followers: [], messages: [],\r\n                    }\r\n                const allUsers = {...this.state.allUsers};  \r\n                allUsers[userId] = newPerson;               \r\n                this.setState({allUsers});                  \r\n                localStorage.setItem('currentPerson', JSON.stringify({...newPerson}));\r\n                this.props.history.push('/profile');\r\n            }\r\n        }\r\n\r\n        const clickLoginButton = (thisUserEmail, thisUserPassword) => {\r\n            const users = this.state.allUsers; // создание объекта со всеми текущими пользователями\r\n            let loginFlag = true;              // создание переменной (флага) для проверки совпадения\r\n            for (var id in users) {            // начало цикла проверки совпадения\r\n                // если находится совпадение выполнится код условия\r\n                if(users[id]['userEmail'] == thisUserEmail && users[id]['userPassword'] == thisUserPassword){\r\n                    loginFlag = false;  // изменение флага совпадения\r\n                    const currentPerson = {...users[id]};  // создание копии совпадающего пользователя \r\n                    // установка копии в локальное хранилище\r\n                    localStorage.setItem('currentPerson', JSON.stringify(currentPerson)); \r\n                    const allUsers = {...this.state.allUsers}; // создание копии state allUsers\r\n                    allUsers[id].online = true;                // изменение параметра online\r\n                    allUsers[id].flag = !allUsers[id].flag;    // изменение параметра flag\r\n                    this.setState({allUsers});                 // изменение state компоненты App\r\n                    break;                                     // выход из цикла\r\n                }\r\n            }\r\n            // если совпадений не нашлось, то выводим текст оповещения\r\n            if(loginFlag){\r\n                alert('Email или Password введен неверно...') // оповещение\r\n            }\r\n            else this.props.history.push('/profile');\r\n        }\r\n\r\n        const onClickTopbarImg = () => {\r\n            // получение информации о текущем пользователе\r\n            const localCurrentPerson = JSON.parse(localStorage.getItem('currentPerson'));\r\n            const userId = localCurrentPerson?.userId;  // получение Id текущего пользователя\r\n            const currentPerson = {};   // создание объекта пустого пользователя\r\n            // изменение действующего пользователя на пустого в локальном хранилище\r\n            localStorage.setItem('currentPerson', JSON.stringify(currentPerson));\r\n            const allUsers = {...this.state.allUsers};  // создание копии state allUsers\r\n            allUsers[userId].online = false;  // изменение параметра online \r\n            this.setState({allUsers});  // изменение state компоненты App\r\n        }\r\n\r\n        const onClickShare = (desc, img, location) => {\r\n            // получение информации о текущем пользователе\r\n            const localCurrentPerson = JSON.parse(localStorage.getItem('currentPerson'));\r\n            const userId = localCurrentPerson.userId;  // получение Id текущего пользователя\r\n            let date = new Date();  // создание переменной текущей даты и времени\r\n            // создание строки даты и времени опубликования поста\r\n            const newDate = (date.getMonth()+1)+\".\"+date.getDate()+\".\"+date.getFullYear()+\" \"+date.getHours()+\":\"+date.getMinutes(); \r\n            const newPost = {  // создание объекта нового поста\r\n                comment: 0, date: newDate, desc: desc, id: userId, like: 0,\r\n                photo: img, userId: userId, location: location, posts: [],\r\n            }\r\n            let copyPosts = this.state.allUsers[userId].posts;  // создание копии всех постов пользователя\r\n            copyPosts ? copyPosts.unshift(newPost) : copyPosts = [newPost];  // добавление поста\r\n            let allUsers = {...this.state.allUsers};  // создание копии state allUsers\r\n            allUsers[userId].posts = copyPosts;  // изменение параметра posts в копии allUsers\r\n            this.setState({allUsers});  // изменение state компоненты App\r\n            const currentPerson = this.state.allUsers[userId];  // создание копии текущего пользователя\r\n            localStorage.setItem('currentPerson', JSON.stringify(currentPerson)); // изменение localStorage\r\n        }\r\n\r\n        const onClickDelBut = (e) => {\r\n            const localCurrentPerson = JSON.parse(localStorage.getItem('currentPerson'));\r\n            const userId = localCurrentPerson.userId;\r\n            let newPosts = localCurrentPerson.posts;\r\n            newPosts.splice(e.currentTarget.getAttribute(\"index\"), 1);\r\n            const currentPerson = {...localCurrentPerson, posts: newPosts};\r\n            localStorage.setItem('currentPerson', JSON.stringify(currentPerson));\r\n            const newPerson = {...this.state.allUsers[userId], posts: newPosts};\r\n            const allUsers = { ...this.state.allUsers, [userId]: newPerson }\r\n            this.setState({allUsers});\r\n        }\r\n\r\n        const onClickLike = (e, like) => {\r\n            const localCurrentPerson = JSON.parse(localStorage.getItem('currentPerson'));\r\n            const userId = localCurrentPerson.userId;\r\n            let newPosts = localCurrentPerson.posts;\r\n            if (newPosts[e.currentTarget.getAttribute(\"index\")] ? newPosts[e.currentTarget.getAttribute(\"index\")].like ? 1 : 0 : 0)\r\n            newPosts[e.currentTarget.getAttribute(\"index\")].like = like;\r\n            const currentPerson = {...localCurrentPerson, posts: newPosts}\r\n            localStorage.setItem('currentPerson', JSON.stringify(currentPerson));\r\n            const newPerson = {...this.state.allUsers[userId], posts: newPosts};\r\n            const allUsers = { ...this.state.allUsers, [userId]: newPerson }\r\n            this.setState({allUsers});\r\n        }\r\n\r\n        const onClickInputButton = (newText, word) => {\r\n            if (newText){\r\n                const localCurrentPerson = JSON.parse(localStorage.getItem('currentPerson'));\r\n                const userId = localCurrentPerson.userId;\r\n                const currentPerson = {...localCurrentPerson, [word]: newText};\r\n                localStorage.setItem('currentPerson', JSON.stringify(currentPerson));\r\n                const newPerson = {...this.state.allUsers[userId], [word]: newText};\r\n                const allUsers = { ...this.state.allUsers, [userId]: newPerson };\r\n                this.setState({allUsers});\r\n            }\r\n        }\r\n\r\n        const onClickUser = (id) => {\r\n            const currentUser = {...this.state.allUsers[id]};\r\n            localStorage.setItem('currentUser', JSON.stringify(currentUser));\r\n            const localCurrentPerson = JSON.parse(localStorage.getItem('currentPerson'));\r\n            const userId = localCurrentPerson.userId;\r\n            const flag = this.state.allUsers[userId].flag;\r\n            const newPerson = {...this.state.allUsers[userId], flag: !flag};\r\n            const allUsers = { ...this.state.allUsers, [userId]: newPerson }\r\n            this.setState({allUsers});\r\n        }\r\n\r\n        const followOnUser = () => {\r\n            const localCurrentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n            const userId = localCurrentUser.userId;\r\n            const localCurrentPerson = JSON.parse(localStorage.getItem('currentPerson'));\r\n            const personId = localCurrentPerson.userId;\r\n            let personFollowers = this.state.allUsers[personId].followers;\r\n            personFollowers = personFollowers ? personFollowers : [];\r\n            personFollowers.includes(userId) ? personFollowers.splice(personFollowers.indexOf(userId),1) : personFollowers.unshift(userId);\r\n            const newPerson = {...this.state.allUsers[personId], followers: personFollowers }\r\n            const allUsers = { ...this.state.allUsers, [personId]: newPerson }\r\n            localStorage.setItem('currentPerson', JSON.stringify(newPerson));\r\n            this.setState({allUsers});\r\n        }\r\n\r\n        const onSendClick = (userId, message) => {\r\n            const localCurrentPerson = JSON.parse(localStorage.getItem('currentPerson'));\r\n            const personId = localCurrentPerson.userId;\r\n            const newMesMy = {true: message};\r\n            const newMesYour = {false: message};\r\n            const allUsers = { ...this.state.allUsers}\r\n            let mesArrMy = allUsers[personId].messages ? \r\n                            allUsers[personId].messages[userId] ? \r\n                            allUsers[personId].messages[userId]\r\n                            : [] \r\n                        : [];\r\n            let mesArrYour = allUsers[userId].messages ? \r\n                                allUsers[userId].messages[personId] ? \r\n                                allUsers[userId].messages[personId]\r\n                                : [] \r\n                            : [];\r\n            mesArrMy.push(newMesMy);\r\n            mesArrYour.push(newMesYour);\r\n            const objMesMy = {[userId]: mesArrMy};\r\n            const objMesYour = {[personId]: mesArrYour};\r\n            const newPersonMy = {...allUsers[personId], messages: objMesMy};\r\n            const newPersonYour = {...allUsers[userId], messages: objMesYour};\r\n            const allUsersNew = {...allUsers, [personId]: newPersonMy, [userId]: newPersonYour};\r\n            localStorage.setItem('currentPerson', JSON.stringify(newPersonMy));\r\n            localStorage.setItem('currentUser', JSON.stringify(newPersonYour));\r\n            this.setState({allUsers: allUsersNew});\r\n        }\r\n\r\n        const stateAndFunc = {\r\n            ...this.state,\r\n            currentPerson: JSON.parse(localStorage.getItem('currentPerson')),\r\n            currentUser: JSON.parse(localStorage.getItem('currentUser')),\r\n            clickRegisterButton,\r\n            clickLoginButton,\r\n            onClickTopbarImg,\r\n            onClickShare,\r\n            onClickDelBut,\r\n            onClickLike,\r\n            onClickInputButton,\r\n            onClickUser,\r\n            followOnUser,\r\n            onSendClick,\r\n        }\r\n\r\n        return (\r\n            <StoreContext.Provider value={stateAndFunc}> \r\n                    <Route path=\"/timeline\"><Home /></Route>\r\n                    <Route path=\"/MySoc\">\r\n                        <Login \r\n                            clickLoginButton={clickLoginButton} \r\n                            currentPerson={localStorage.getItem('currentPerson') ? JSON.parse(localStorage.getItem('currentPerson'))['userEmail'] : {}} \r\n                        />\r\n                    </Route> \r\n                    <Route path=\"/register\"><Register clickRegisterButton={clickRegisterButton} /></Route>\r\n                    <Route path=\"/messenger\"><Messenger onClickTopbarImg={onClickTopbarImg} /></Route>\r\n                    <Route path=\"/profile\"><Profile /></Route>\r\n                    <Route path=\"/user\"><User allUsers={this.state.allUsers}/></Route>\r\n            </StoreContext.Provider>\r\n          )\r\n    }\r\n}\r\n\r\nexport default withRouter(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}