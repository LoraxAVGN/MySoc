{"version":3,"sources":["StoreContext.jsx","components/topbar/Topbar.jsx","components/closeFriend/CloseFriend.jsx","components/sidebar/Sidebar.jsx","components/post/Post.jsx","components/share/Share.jsx","components/feed/Feed.jsx","components/online/Online.jsx","components/rightbarFollowings/RightbarFollowings.jsx","components/rightbar/Rightbar.jsx","pages/home/Home.jsx","pages/login/Login.jsx","pages/profile/Profile.jsx","pages/register/Register.jsx","components/conversations/Conversation.jsx","components/message/Message.jsx","components/chatOnline/ChatOnline.jsx","pages/messenger/Messenger.jsx","pages/user/userRightbar.jsx","pages/user/user.jsx","base.js","App.js","index.js"],"names":["StoreContext","React","createContext","Topbar","Consumer","SF","personId","currentPerson","userId","className","to","Search","placeholder","Home","Timeline","Chat","onClick","onClickTopbarImg","ExitToApp","src","allUsers","icon","alt","CloseFriend","user","onClickUser","userName","Sidebar","useState","showMoreFlag","changeShowMoreFlag","PlayCircleFilledOutlined","Group","Bookmark","HelpOutline","WorkOutline","Event","School","Object","keys","map","key","Post","props","post","like","setLike","isLiked","setIsLiked","postTopFlag","changePostTopFlag","onClickLikeNew","e","x","likeHandler","onClickLike","id","moment","date","fromNow","timeline","onClickDelBut","newOnClickDelBut","index","MoreVert","desc","photo","location","Room","htmlColor","Share","photoFlag","onClickPhotoFlag","sharePhotoLink","changeSharePhotoLink","photoButton","onClickPhotoButton","shareText","changeShareText","locationFlag","onClickLocationFlag","locationText","changeLocationText","locationButtonOk","onClickLocationButtonOk","NewOnClickShare","onClickShare","value","onChange","currentTarget","onKeyPress","PermMedia","Feed","currentUser","followersPosts","home","followersArr","followers","newFolPosts","posts","concat","sort","a","b","profile","p","Online","RightbarFollowings","length","slice","Rightbar","HomeRightbar","newFolArr","online","push","u","ProfileRightbar","userCityFlag","changeUserCityFlag","userCityText","changeUserCityText","userCountryFlag","changeUserCountryFlag","userCountryText","changeUserCountryText","userRelationshipFlag","changeUserRelationshipFlag","userRelationshipText","changeUserRelationshipText","onClickCityButtonNew","onClickInputButton","onClickCountryButtonNew","onClickRelationshipButtonNew","onDoubleClick","city","country","relationship","Login","userEmail","setUserEmail","userPassword","setUserPassword","type","clickLoginButton","Profile","userNameFlag","changeUserNameFlag","userNameText","changeUserNameText","userStatusFlag","changeUserStatusFlag","userStatusText","changeUserStatusText","profileCoverImgFlag","changeProfileCoverImgFlag","profileCoverImgText","changeProfileCoverImgText","profileIconFlag","changeProfileIconFlag","profileIconText","changeProfileIconText","onClickNameButtonNew","onClickStatusButtonNew","onClickCoverButtonNew","onClickProfileIconButtonNew","coverUrl","status","Register","setUserName","userPasswordAgain","setUserPasswordAgain","clickRegisterButton","Conversation","searchText","idArr","searchArr","newSearchArr","name","toUpperCase","includes","Message","own","message","ChatOnline","Messenger","changeMessage","changeSearchText","onSendClickNew","onSendClick","mesArr","messages","mes","values","userRightbar","localCurrentPerson","JSON","parse","localStorage","getItem","isFollow","userFollowFlag","changeUserFollowFlag","followOnUser","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","App","state","this","ref","syncState","context","removeBinding","repeatPassword","alert","test","Date","valueOf","newPerson","setState","setItem","stringify","history","thisUserEmail","thisUserPassword","users","loginFlag","flag","stateAndFunc","img","newPost","comment","getMonth","getDate","getFullYear","getHours","getMinutes","copyPosts","unshift","newPosts","splice","getAttribute","newText","word","personFollowers","indexOf","newMesMy","true","newMesYour","false","mesArrMy","mesArrYour","objMesMy","objMesYour","newPersonMy","newPersonYour","allUsersNew","Provider","path","Component","withRouter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"srBAIeA,EAFMC,IAAMC,cAAc,MCI1B,SAASC,IAEtB,OACE,kBAAC,EAAaC,SAAd,MAEE,SAACC,GAAQ,IAAD,MAEAC,GAAW,UAAAD,EAAGE,qBAAH,eAAkBC,SAAU,GAE7C,OACA,yBAAKC,UAAU,mBACb,yBAAKA,UAAU,cACb,kBAAC,IAAD,CAASC,GAAG,YACV,0BAAMD,UAAU,QAAhB,WAGJ,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,aACb,kBAACE,EAAA,EAAD,CAAQF,UAAU,eAClB,2BACEG,YAAY,mCACZH,UAAU,kBAIhB,yBAAKA,UAAU,eACb,yBAAKA,UAAU,eACb,kBAAC,IAAD,CAASC,GAAG,YACV,kBAACG,EAAA,EAAD,OAEF,kBAAC,IAAD,CAASH,GAAG,aACV,kBAACI,EAAA,EAAD,OAEF,kBAAC,IAAD,CAASJ,GAAG,cACV,kBAACK,EAAA,EAAD,OAEF,kBAAC,IAAD,CAASL,GAAG,UACV,yBACED,UAAU,iBACVO,QAASX,EAAGY,kBACZ,kBAACC,EAAA,EAAD,SAIN,kBAAC,IAAD,CAASR,GAAG,YACV,yBACES,KAAO,OAAFd,QAAE,IAAFA,GAAA,UAAAA,EAAIe,SAASd,UAAb,eAAwBe,QAAS,UAAAhB,EAAGE,qBAAH,eAAkBC,SAAU,mGAClEc,IAAI,GACJb,UAAU,oB,mFCjDX,SAASc,EAAT,GAA8B,IAARC,EAAO,EAAPA,KAEnC,OACE,kBAAC,EAAapB,SAAd,MAEI,SAACC,GAAD,OACA,kBAAC,IAAD,CAASI,UAAU,aAAaC,GAAG,SACjC,wBAAIM,QAAS,kBAAMX,EAAGoB,YAAYD,EAAKhB,SAAUC,UAAU,iBACzD,yBAAKA,UAAU,mBAAmBU,IAAKK,EAAKH,MAAQ,mGAAoGC,IAAI,KAC5J,0BAAMb,UAAU,qBAAqBe,EAAKE,UAAY,gBCNnD,SAASC,IAAW,IAAD,EAEUC,oBAAS,GAFnB,mBAE1BC,EAF0B,KAEZC,EAFY,KAIhC,OACE,kBAAC,EAAa1B,SAAd,MAEE,SAACC,GAAD,OACA,yBAAKI,UAAU,WACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,eACZ,kBAAC,IAAD,CAASA,UAAU,UAAUC,GAAG,YAC9B,wBAAID,UAAU,mBACZ,kBAACI,EAAA,EAAD,CAAMJ,UAAU,gBAChB,0BAAMA,UAAU,uBAAhB,cAGJ,kBAAC,IAAD,CAASA,UAAU,UAAUC,GAAG,aAC9B,wBAAID,UAAU,mBACZ,kBAACK,EAAA,EAAD,CAAUL,UAAU,gBACpB,0BAAMA,UAAU,uBAAhB,cAGJ,kBAAC,IAAD,CAASA,UAAU,UAAUC,GAAG,cAC9B,wBAAID,UAAU,mBACZ,kBAACM,EAAA,EAAD,CAAMN,UAAU,gBAChB,0BAAMA,UAAU,uBAAhB,WAGFoB,GACF,oCACE,wBAAIpB,UAAU,mBACZ,kBAACsB,EAAA,EAAD,CAA0BtB,UAAU,gBACpC,0BAAMA,UAAU,uBAAhB,WAEF,wBAAIA,UAAU,mBACZ,kBAACuB,EAAA,EAAD,CAAOvB,UAAU,gBACjB,0BAAMA,UAAU,uBAAhB,WAEF,wBAAIA,UAAU,mBACZ,kBAACwB,EAAA,EAAD,CAAUxB,UAAU,gBACpB,0BAAMA,UAAU,uBAAhB,cAEF,wBAAIA,UAAU,mBACZ,kBAACyB,EAAA,EAAD,CAAazB,UAAU,gBACvB,0BAAMA,UAAU,uBAAhB,cAEF,wBAAIA,UAAU,mBACZ,kBAAC0B,EAAA,EAAD,CAAa1B,UAAU,gBACvB,0BAAMA,UAAU,uBAAhB,SAEF,wBAAIA,UAAU,mBACZ,kBAAC2B,EAAA,EAAD,CAAO3B,UAAU,gBACjB,0BAAMA,UAAU,uBAAhB,WAEF,wBAAIA,UAAU,mBACZ,kBAAC4B,EAAA,EAAD,CAAQ5B,UAAU,gBAClB,0BAAMA,UAAU,uBAAhB,cAKN,4BACEA,UAAU,gBACVO,QAAS,kBAAMc,GAAoBD,KAFrC,aAKA,wBAAIpB,UAAU,cACd,wBAAIA,UAAU,qBACX6B,OAAOC,KAAKlC,EAAGe,UAAUoB,KAAI,SAACC,GAAS,IAAD,EACrC,GAAIA,IAAG,UAAIpC,EAAGE,qBAAP,aAAI,EAAkBC,QAAQ,OAAO,kBAACe,EAAD,CAAakB,IAAKA,EAAKjB,KAAMnB,EAAGe,SAASqB,c,6CCtEpF,SAASC,EAAKC,GAAQ,IAAD,IAEXf,mBAAQ,UAACe,EAAMC,YAAP,aAAC,EAAYC,MAFV,mBAE3BA,EAF2B,KAEtBC,EAFsB,OAGLlB,oBAAS,GAHJ,mBAG3BmB,EAH2B,KAGnBC,EAHmB,OAIMpB,oBAAS,GAJf,mBAI5BqB,EAJ4B,KAIfC,EAJe,KAa5BC,EAAiB,SAACC,GACtB,IAAMC,EARY,SAACA,GAInB,OAHAP,EAAQC,EAAUF,EAAK,EAAIA,EAAK,GAChCG,GAAYD,GACZA,IAAYM,IAAMA,EACXA,EAIGC,CAAYT,GACtBF,EAAMY,YAAYH,EAAGC,IAQjBhC,EAAO,mGAEb,OACE,kBAAC,EAAajB,SAAd,MAEE,SAACC,GAAD,qBACA,yBAAKI,UAAU,QACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,eACb,kBAAC,IAAD,CAASA,UAAU,aAAaC,GAAG,SACjC,yBACEM,QAAS,kBAAMX,EAAGoB,YAAYkB,EAAMC,KAAKY,KACzC/C,UAAU,iBACVU,IAAKd,EAAGe,SAAH,UAAYuB,EAAMC,YAAlB,aAAY,EAAYY,KAAMnD,EAAGe,SAASuB,EAAMC,KAAKY,IAAInC,KAAOhB,EAAGe,SAASuB,EAAMC,KAAKY,IAAInC,KAAcA,EAC9GC,IAAI,MAGR,0BAAMb,UAAU,iBAEhB,0BAAMA,UAAU,YAAYgD,IAAM,UAACd,EAAMC,YAAP,aAAC,EAAYc,MAAMC,aAErDhB,EAAMiB,WAAajB,EAAMnB,MAC3B,yBAAKf,UAAU,gBACZwC,GACC,4BACAjC,QAAS,SAACoC,GAAD,OA/BE,SAACA,GACxBT,EAAMkB,cAAcT,GACpBF,GAAkB,GA6BUY,CAAiBV,IACjC3C,UAAU,gBACVsD,MAAOpB,EAAMoB,OAHb,UAOF,kBAACC,EAAA,EAAD,CACEvD,UAAU,WACVO,QAAS,kBAAMkC,GAAmBD,QAKxC,yBAAKxC,UAAU,cACb,0BAAMA,UAAU,YAAhB,UAA4BkC,EAAMC,YAAlC,aAA4B,EAAYqB,MACxC,yBAAKxD,UAAU,UAAUU,IAAG,UAAEwB,EAAMC,YAAR,aAAE,EAAYsB,MAAO5C,IAAI,OAEtD,UAAAqB,EAAMC,YAAN,eAAYuB,WACX,yBAAK1D,UAAU,gBACb,kBAAC2D,EAAA,EAAD,CAAMC,UAAU,QAAQ5D,UAAU,cAClC,0BAAMA,UAAU,mBAAmBkC,EAAMC,KAAKuB,WAGlD,yBAAK1D,UAAU,cACb,yBAAKA,UAAU,kBACb,yBACEsD,MAAOpB,EAAMoB,MACbtD,UAAU,WACVU,IAAI,2EACJH,QAAS,SAACoC,GAAD,OAAOD,EAAeC,IAC/B9B,IAAI,KAEN,yBACEyC,MAAOpB,EAAMoB,MACbtD,UAAU,WACVU,IAAI,+GACJH,QAAS,SAACoC,GAAD,OAAOD,EAAeC,IAC/B9B,IAAI,KAEN,0BACIb,UAAU,mBACToC,EAFL,0B,mBC3FC,SAASyB,EAAM3B,GAAQ,IAAD,EAEEf,oBAAS,GAFX,mBAE7B2C,EAF6B,KAElBC,EAFkB,OAGW5C,mBAAS,IAHpB,mBAG7B6C,EAH6B,KAGbC,EAHa,OAIM9C,oBAAS,GAJf,mBAI7B+C,EAJ6B,KAIhBC,EAJgB,OAKChD,mBAAS,IALV,mBAK7BiD,EAL6B,KAKlBC,EALkB,OAMQlD,oBAAS,GANjB,mBAM7BmD,EAN6B,KAMfC,EANe,OAOOpD,mBAAS,IAPhB,mBAO7BqD,EAP6B,KAOfC,EAPe,OAQgBtD,oBAAS,GARzB,mBAQ7BuD,EAR6B,KAQXC,EARW,KAU7BC,EAAkB,WACtB1C,EAAM2C,aAAaT,EAAWJ,EAAgBQ,GAC9CH,EAAgB,IAChBJ,EAAqB,IACrBQ,EAAmB,IACnBV,GAAiB,GACjBQ,GAAoB,GACpBJ,GAAmB,GACnBQ,GAAwB,IAG1B,OACE,kBAAC,EAAahF,SAAd,MAEE,SAACC,GAAQ,IAAD,IAEAC,GAAW,UAAAD,EAAGE,qBAAH,eAAkBC,SAAU,GAE7C,OACA,yBAAKC,UAAU,SACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,YACb,yBACEA,UAAU,kBACVU,KAAO,OAAFd,QAAE,IAAFA,GAAA,UAAAA,EAAIe,SAASd,UAAb,eAAwBe,OAAQ,mGACrCC,IAAI,KAEN,2BACEV,YAAY,uBACZH,UAAU,aACV8E,MAAOV,EACPW,SAAU,SAAApC,GAAC,OAAI0B,EAAgB1B,EAAEqC,cAAcF,WAGnD,wBAAI9E,UAAU,YACb8D,IAAcI,GACf,oCACE,2BACEe,WAAY,SAAAtC,GAAmB,SAATA,EAAEX,KAAkBmC,GAAmB,IAC7DW,MAAOd,EACPe,SAAU,SAAApC,GAAC,OAAIsB,EAAqBtB,EAAEqC,cAAcF,QACpD3E,YAAY,sIACZH,UAAU,mBAEZ,8BACE,4BACEO,QAAS,kBAAM4D,GAAmB,IAClCnE,UAAU,6BAFZ,QAQHkE,GACC,yBAAKlE,UAAU,cAAcU,IAAKsD,EAAgBnD,IAAI,KAEvDyD,IAAiBI,GAChB,oCACE,2BACEO,WAAY,SAAAtC,GAAmB,SAATA,EAAEX,KAAkB2C,GAAwB,IAClExE,YAAY,mBACZH,UAAU,gBACV8E,MAAON,EACPO,SAAU,SAAApC,GAAC,OAAI8B,EAAmB9B,EAAEqC,cAAcF,UAEpD,8BACE,4BAAQvE,QAAS,kBAAMoE,GAAwB,IAAQ3E,UAAU,6BAAjE,QAIL0E,GACC,yBAAK1E,UAAU,eACb,kBAAC2D,EAAA,EAAD,CAAMC,UAAU,QAAQ5D,UAAU,cAClC,0BAAMA,UAAU,mBAAmBwE,IAGvC,yBAAKxE,UAAU,eACX,yBAAKA,UAAU,gCACX,yBAAKO,QAAS,kBAAMwD,GAAiB,IAAO/D,UAAU,eAClD,kBAACkF,EAAA,EAAD,CAAWtB,UAAU,SAAS5D,UAAU,cACxC,0BAAMA,UAAU,mBAAhB,mBAEJ,yBAAKO,QAAS,kBAAMgE,GAAoB,IAAOvE,UAAU,eACrD,kBAAC2D,EAAA,EAAD,CAAMC,UAAU,QAAQ5D,UAAU,cAClC,0BAAMA,UAAU,mBAAhB,cAGR,4BAAQO,QAASqE,EAAkB5E,UAAU,eAA7C,e,MC/FD,SAASmF,EAAKjD,GAE3B,OACE,kBAAC,EAAavC,SAAd,MAEE,SAACC,GACA,IAAD,cACQG,EAAM,OAAGH,QAAH,IAAGA,GAAH,UAAGA,EAAIwF,mBAAP,aAAG,EAAiBrF,OAC1BF,EAAQ,OAAGD,QAAH,IAAGA,GAAH,UAAGA,EAAIE,qBAAP,aAAG,EAAmBC,OAEhCsF,EAAiB,GACrB,GAAGnD,EAAMoD,KAAK,CAAC,IAAD,EACNC,GAAiB,OAAF3F,QAAE,IAAFA,GAAA,UAAAA,EAAIe,SAASd,UAAb,eAAwB2F,YAAa,GACtDC,EAAc,GAClBF,EAAaxD,KAAI,SAAAgB,GACZnD,EAAGe,SAASoC,MAAMnD,EAAGe,SAASoC,GAAI2C,QACnCD,EAAcA,EAAYE,OAAO/F,EAAGe,SAASoC,GAAI2C,WAErDL,EAAiBI,EAAYG,MAAK,SAACC,EAAEC,GAAH,OAAS9C,IAAO8C,EAAE7C,MAAQD,IAAO6C,EAAE5C,SAGvE,OACE,yBAAKjD,UAAU,QACb,yBAAKA,UAAU,eACZkC,EAAM6D,SAAW,kBAAClC,EAAD,CAAOgB,aAAcjF,EAAGiF,eACzC3C,EAAM6D,UAAN,OAAiBnG,QAAjB,IAAiBA,GAAjB,UAAiBA,EAAIe,SAASd,UAA9B,iBAAiB,EAAwB6F,aAAzC,aAAiB,EAA+B3D,KAAI,SAACiE,EAAG1C,GAAJ,OACnD,kBAACrB,EAAD,CACE8D,SAAO,EACPzC,MAAOA,EACPtB,KAAM,OAADgE,QAAC,IAADA,OAAA,EAAAA,EAAGjD,IAAKO,EACbnB,KAAM6D,EACN5C,cAAexD,EAAGwD,cAClBN,YAAalD,EAAGkD,kBAGnBZ,EAAMnB,OAAN,OAAcnB,QAAd,IAAcA,GAAd,UAAcA,EAAIe,SAASZ,UAA3B,iBAAc,EAAsB2F,aAApC,aAAc,EAA6B3D,KAAI,SAACiE,EAAG1C,GAClD,OACA,kBAACrB,EAAD,CACElB,KAAMmB,EAAMnB,KACZuC,MAAOA,EACPtB,KAAM,OAADgE,QAAC,IAADA,OAAA,EAAAA,EAAGjD,IAAKO,EACbnB,KAAM6D,EACN5C,cAAexD,EAAGwD,cAClBN,YAAalD,EAAGkD,kBAGnBZ,EAAMoD,OAAN,UAAcD,SAAd,aAAc,EAAgBtD,KAAI,SAACiE,EAAG1C,GAAJ,OACjC,kBAACrB,EAAD,CACEkB,UAAQ,EACRpC,KAAMmB,EAAMnB,KACZuC,MAAOA,EACPtB,IAAKgE,EAAEjD,GAAKO,EACZnB,KAAM6D,EACN5C,cAAexD,EAAGwD,cAClBN,YAAalD,EAAGkD,uB,YCxDnB,SAASmD,EAAT,GAAyB,IAARlF,EAAO,EAAPA,KAC9B,OACE,kBAAC,EAAapB,SAAd,MAEE,SAACC,GAAD,OACA,kBAAC,IAAD,CAASI,UAAU,aAAaC,GAAG,SACjC,wBAAIM,QAAS,kBAAMX,EAAGoB,YAAYD,EAAKhB,SAASC,UAAU,kBACxD,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,qBAAqBU,IAAKK,EAAKH,KAAMC,IAAI,KACxD,0BAAMb,UAAU,oBAElB,0BAAMA,UAAU,oBAAoBe,EAAKE,e,MCXpC,SAASiF,IACpB,OACI,kBAAC,EAAavG,SAAd,MAEI,SAACC,GAAQ,IAAD,QAEEC,GAAW,UAAAD,EAAGE,qBAAH,eAAkBC,SAAU,GAE7C,OACA,yBAAKC,UAAU,uBACR,OAAFJ,QAAE,IAAFA,GAAA,UAAAA,EAAIe,SAASd,UAAb,eAAwB2F,WAAxB,OAAoC5F,QAApC,IAAoCA,GAApC,UAAoCA,EAAIe,SAASd,UAAjD,iBAAoC,EAAwB2F,iBAA5D,aAAoC,EAAmCzD,KAAI,SAAAgB,GAAE,aAC1E,kBAAC,IAAD,CAASf,IAAKe,EAAI/C,UAAU,aAAaC,GAAG,SACxC,yBAAKM,QAAS,kBAAMX,EAAGoB,YAAY+B,IAAK/C,UAAU,qBAClD,yBACIU,KAAO,OAAFd,QAAE,IAAFA,GAAA,UAAAA,EAAIe,SAASoC,UAAb,eAAkBnC,OAAQ,mGAE/BC,IAAI,GACJb,UAAU,yBAEd,0BAAMA,UAAU,yBACXJ,EAAGe,SAASoC,IACbnD,EAAGe,SAASoC,GAAI9B,SACZrB,EAAGe,SAASoC,GAAI9B,SAASkF,OAAO,GAChCvG,EAAGe,SAASoC,GAAI9B,SAChBrB,EAAGe,SAASoC,GAAI9B,SAASmF,MAAM,EAAG,IAAI,MAExC,SAIV,OC7BT,SAASC,EAASnE,GAE/B,IAAMoE,EAAe,WACnB,OACE,kBAAC,EAAa3G,SAAd,MAEE,SAACC,GACC,IAAM2F,EAAe3F,EAAGE,cAAc0F,WAAa,GAC/Ce,EAAY,GAKhB,OAJAhB,EAAaxD,KAAI,SAAAgB,GACZnD,EAAGe,SAASoC,MAAMnD,EAAGe,SAASoC,GAAIyD,QAAoBD,EAAUE,KAAK7G,EAAGe,SAASoC,OAIpF,oCACE,yBAAK/C,UAAU,qBACb,yBAAKA,UAAU,cAAcU,IAAI,iEAAiEG,IAAI,KACtG,0BAAMb,UAAU,gBAAhB,iCAIF,yBAAKA,UAAU,aAAaU,IAAI,oFAAoFG,IAAI,KACxH,wBAAIb,UAAU,iBAAd,kBACA,wBAAIA,UAAU,sBACXJ,EAAGe,UAAY4F,EAAUxE,KAAI,SAAC2E,GAAD,OAC5B,kBAACT,EAAD,CAAQjE,IAAK0E,EAAE3G,OAAQgB,KAAM2F,aAWvCC,EAAkB,WAAO,IAAD,EAEcxF,oBAAS,GAFvB,mBAEtByF,EAFsB,KAERC,EAFQ,OAGc1F,mBAAS,IAHvB,mBAGtB2F,EAHsB,KAGRC,EAHQ,OAIoB5F,oBAAS,GAJ7B,mBAItB6F,EAJsB,KAILC,EAJK,OAKoB9F,mBAAS,IAL7B,mBAKtB+F,EALsB,KAKLC,EALK,OAM8BhG,oBAAS,GANvC,mBAMtBiG,EANsB,KAMAC,EANA,OAO8BlG,mBAAS,IAPvC,mBAOtBmG,EAPsB,KAOAC,EAPA,KAS5B,OACE,kBAAC,EAAa5H,SAAd,MAEE,SAACC,GAAQ,IAAD,cAEA4H,EAAuB,WAC3B5H,EAAG6H,mBAAmBX,EAAc,QACpCD,GAAmB,GACnBE,EAAmB,KAGfW,EAA0B,WAC9B9H,EAAG6H,mBAAmBP,EAAiB,WACvCD,GAAsB,GACtBE,EAAsB,KAGlBQ,EAA+B,WACnC/H,EAAG6H,mBAAmBH,EAAsB,gBAC5CD,GAA2B,GAC3BE,EAA2B,KAGvB1H,GAAW,UAAAD,EAAGE,qBAAH,eAAkBC,SAAU,GAE7C,OACA,oCACE,wBAAIC,UAAU,iBAAd,oBACA,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,oBACb,0BAAMA,UAAU,mBAAhB,UACE4G,GACF,0BACE5G,UAAU,oBACV4H,cAAe,kBAAMf,GAAmB,MACrC,OAAFjH,QAAE,IAAFA,GAAA,UAAAA,EAAIe,SAASd,UAAb,eAAwBgI,QAAS,UAAAjI,EAAGE,qBAAH,eAAkBC,SAAU,gBAE/D6G,GACC,yBAAK5G,UAAU,wBACb,2BACEiF,WAAY,SAAAtC,GAAmB,SAATA,EAAEX,KAAkBwF,KAC1C1C,MAAOgC,EACP/B,SAAU,SAAApC,GAAC,OAAIoE,EAAmBpE,EAAEqC,cAAcF,QAClD3E,YAAaP,EAAGE,cAAc+H,MAAQ,eACtC7H,UAAU,sBAEZ,8BACE,4BACEO,QAAS,kBAAMiH,KACfxH,UAAU,6BAFZ,SASR,yBAAKA,UAAU,oBACb,0BAAMA,UAAU,mBAAhB,UACEgH,GACF,0BACEhH,UAAU,oBACV4H,cAAe,kBAAMX,GAAsB,MACxC,OAAFrH,QAAE,IAAFA,GAAA,UAAAA,EAAIe,SAASd,UAAb,eAAwBiI,WAAY,UAAAlI,EAAGE,qBAAH,eAAkBC,SAAU,mBAElEiH,GACC,yBAAKhH,UAAU,wBACb,2BACEiF,WAAY,SAAAtC,GAAmB,SAATA,EAAEX,KAAkB0F,KAC1C5C,MAAOoC,EACPnC,SAAU,SAAApC,GAAC,OAAIwE,EAAsBxE,EAAEqC,cAAcF,QACrD3E,YAAaP,EAAGE,cAAcgI,SAAW,kBACzC9H,UAAU,sBAEZ,8BACE,4BACEO,QAAS,kBAAMmH,KACf1H,UAAU,6BAFZ,SASR,yBAAKA,UAAU,oBACb,0BAAMA,UAAU,mBAAhB,kBACEoH,GACF,0BACEpH,UAAU,oBACV4H,cAAe,kBAAMP,GAA2B,MAC7C,OAAFzH,QAAE,IAAFA,GAAA,UAAAA,EAAIe,SAASd,UAAb,eAAwBkI,gBAAiB,UAAAnI,EAAGE,qBAAH,eAAkBC,SAAU,wBAEvEqH,GACC,yBAAKpH,UAAU,wBACb,2BACEiF,WAAY,SAAAtC,GAAmB,SAATA,EAAEX,KAAkB2F,KAC1C7C,MAAOwC,EACPvC,SAAU,SAAApC,GAAC,OAAI4E,EAA2B5E,EAAEqC,cAAcF,QAC1D3E,YAAaP,EAAGE,cAAciI,cAAgB,uBAC9C/H,UAAU,sBAEZ,8BACE,4BACEO,QAAS,kBAAMoH,KACf3H,UAAU,6BAFZ,UAUV,wBAAIA,UAAU,iBAAd,gBAEA,kBAAC,EAAD,WASV,OACE,yBAAKA,UAAU,YACb,yBAAKA,UAAU,mBACZkC,EAAM6D,QAAU,kBAACY,EAAD,MAAsB,kBAACL,EAAD,Q,MCzKhC,SAASlG,IACtB,OACE,oCACE,kBAACV,EAAD,MACA,yBAAKM,UAAU,iBACb,kBAACkB,EAAD,MACA,kBAACiE,EAAD,CAAMY,SAAS,EAAOT,MAAI,IAC1B,kBAACe,EAAD,CAAUN,SAAS,M,MCVZ,SAASiC,EAAM9F,GAAQ,IAAD,EAEFf,mBAAS,IAFP,mBAE7B8G,EAF6B,KAElBC,EAFkB,OAGI/G,mBAAS,IAHb,mBAG7BgH,EAH6B,KAGfC,EAHe,KAKnC,OACE,yBAAKpI,UAAU,SACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,aAAd,SACA,0BAAMA,UAAU,aAAhB,4DAIF,yBAAKA,UAAU,cACb,yBAAKA,UAAU,YACb,2BAAO8E,MAAOmD,EAAWlD,SAAU,SAAApC,GAAC,OAAIuF,EAAavF,EAAEqC,cAAcF,QAAQ3E,YAAY,QAAQH,UAAU,eAC3G,2BAAOqI,KAAK,WAAWvD,MAAOqD,EAAcpD,SAAU,SAAApC,GAAC,OAAIyF,EAAgBzF,EAAEqC,cAAcF,QAAQ3E,YAAY,WAAWH,UAAU,eAClI,4BAAQO,QAAS,kBAAM2B,EAAMoG,iBAAiBL,EAAWE,IAAgBnI,UAAU,eAAnF,UACF,kBAAC,IAAD,CAASA,UAAU,0BAA0BC,GAAG,aAC9C,4BAAQD,UAAU,uBAAlB,6B,MChBC,SAASuI,IAAW,IAAD,EAEUpH,oBAAS,GAFnB,mBAE1BqH,EAF0B,KAEZC,EAFY,OAGUtH,mBAAS,IAHnB,mBAG1BuH,EAH0B,KAGZC,EAHY,OAIcxH,oBAAS,GAJvB,mBAI1ByH,EAJ0B,KAIVC,EAJU,OAKc1H,mBAAS,IALvB,mBAK1B2H,EAL0B,KAKVC,EALU,OAMwB5H,oBAAS,GANjC,mBAM1B6H,EAN0B,KAMLC,EANK,OAOwB9H,mBAAS,IAPjC,mBAO1B+H,EAP0B,KAOLC,EAPK,OAQgBhI,oBAAS,GARzB,mBAQ1BiI,EAR0B,KAQTC,EARS,OASgBlI,mBAAS,IATzB,mBAS1BmI,EAT0B,KASTC,EATS,KAWhC,OACE,kBAAC,EAAa5J,SAAd,MAEE,SAACC,GAAQ,IAAD,kBAEA4J,EAAuB,WAC3B5J,EAAG6H,mBAAmBiB,EAAc,YACpCD,GAAmB,GACnBE,EAAmB,KAGfc,EAAyB,WAC7B7J,EAAG6H,mBAAmBqB,EAAgB,UACtCD,GAAqB,GACrBE,EAAqB,KAGjBW,EAAwB,WAC5B9J,EAAG6H,mBAAmByB,EAAqB,YAC3CD,GAA0B,GAC1BE,EAA0B,KAGtBQ,EAA8B,WAClC/J,EAAG6H,mBAAmB6B,EAAiB,QACvCD,GAAsB,GACtBE,EAAsB,KAGlB1J,GAAW,UAAAD,EAAGE,qBAAH,eAAkBC,SAAU,GAE7C,OACA,oCACE,kBAACL,EAAD,MACA,yBAAKM,UAAU,WACb,kBAACkB,EAAD,MACA,yBAAKlB,UAAU,gBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,gBACb,yBACEA,UAAU,kBACVU,KAAO,OAAFd,QAAE,IAAFA,GAAA,UAAAA,EAAIe,SAASd,UAAb,eAAwB+J,YAAa,UAAAhK,EAAGE,qBAAH,eAAkBC,SAAU,2EACtE6H,cAAe,kBAAMqB,GAA0B,IAC/CpI,IAAI,KAEPmI,GACC,yBAAKhJ,UAAU,qBACb,2BACEiF,WAAY,SAAAtC,GAAmB,SAATA,EAAEX,KAAkB0H,KAC1C5E,MAAOoE,EACPnE,SAAU,SAAApC,GAAC,OAAIwG,EAA0BxG,EAAEqC,cAAcF,QACzD3E,YAAaP,EAAGE,cAAc8J,UAAY,cAC1C5J,UAAU,sBAEZ,8BACE,4BACEO,QAAS,kBAAMmJ,KACf1J,UAAU,6BAFZ,QAQJ,yBACEA,UAAU,iBACVU,KAAO,OAAFd,QAAE,IAAFA,GAAA,UAAAA,EAAIe,SAASd,UAAb,eAAwBe,QAAS,UAAAhB,EAAGE,qBAAH,eAAkBC,SAAU,mGAClE6H,cAAe,kBAAMyB,GAAsB,IAC3CxI,IAAI,KAELuI,GACD,yBAAKpJ,UAAU,oBACb,2BACEiF,WAAY,SAAAtC,GAAmB,SAATA,EAAEX,KAAkB2H,KAC1C7E,MAAOwE,EACPvE,SAAU,SAAApC,GAAC,OAAI4G,EAAsB5G,EAAEqC,cAAcF,QACrD3E,YAAaP,EAAGE,cAAc8J,UAAY,aAC1C5J,UAAU,sBAEZ,8BACE,4BACEO,QAAS,kBAAMoJ,KACf3J,UAAU,6BAFZ,SASN,yBAAKA,UAAU,gBACbwI,GACA,wBACExI,UAAU,kBACV4H,cAAe,kBAAMa,GAAmB,MACrC,OAAF7I,QAAE,IAAFA,GAAA,UAAAA,EAAIe,SAASd,UAAb,eAAwBoB,YAAa,UAAArB,EAAGE,qBAAH,eAAkBC,SAAU,WAGrEyI,GACC,yBAAKxI,UAAU,gBACb,2BACEiF,WAAY,SAAAtC,GAAmB,SAATA,EAAEX,KAAkBwH,KAC1C1E,MAAO4D,EACP3D,SAAU,SAAApC,GAAC,OAAIgG,EAAmBhG,EAAEqC,cAAcF,QAClD3E,YAAaP,EAAGE,cAAcmB,UAAY,cAC1CjB,UAAU,sBAEZ,8BACE,4BACEO,QAAS,kBAAMiJ,KACfxJ,UAAU,6BAFZ,SAQJ4I,GACA,0BACE5I,UAAU,kBACV4H,cAAe,kBAAMiB,GAAqB,MACvC,OAAFjJ,QAAE,IAAFA,GAAA,UAAAA,EAAIe,SAASd,UAAb,eAAwBgK,UAAW,UAAAjK,EAAGE,qBAAH,eAAkBC,SAAU,kBAGnE6I,GACC,yBAAK5I,UAAU,sBACb,2BACEiF,WAAY,SAAAtC,GAAmB,SAATA,EAAEX,KAAiByH,KACzC3E,MAAOgE,EACP/D,SAAU,SAAApC,GAAC,OAAIoG,EAAqBpG,EAAEqC,cAAcF,QACpD3E,YAAaP,EAAGE,cAAc+J,QAAU,iBACxC7J,UAAU,sBAEZ,8BACE,4BACEO,QAAS,kBAAMkJ,KACfzJ,UAAU,6BAFZ,UAUR,yBAAKA,UAAU,sBACb,kBAACmF,EAAD,CAAMY,SAAO,IACb,kBAACM,EAAD,CAAUN,SAAO,W,MC9JlB,SAAS+D,EAAS5H,GAAQ,IAAD,EAEPf,mBAAS,IAFF,mBAEhCF,EAFgC,KAEtB8I,EAFsB,OAGL5I,mBAAS,IAHJ,mBAGhC8G,EAHgC,KAGrBC,EAHqB,OAIC/G,mBAAS,IAJV,mBAIhCgH,EAJgC,KAIlBC,EAJkB,OAKWjH,mBAAS,IALpB,mBAKhC6I,EALgC,KAKbC,EALa,KAOtC,OACE,yBAAKjK,UAAU,SACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,aAAd,SACA,0BAAMA,UAAU,aAAhB,4DAIF,yBAAKA,UAAU,cACb,yBAAKA,UAAU,YACb,2BAAO8E,MAAO7D,EAAU8D,SAAU,SAAApC,GAAC,OAAIoH,EAAYpH,EAAEqC,cAAcF,QAAQ3E,YAAY,WAAWH,UAAU,eAC5G,2BAAOqI,KAAK,QAAQvD,MAAOmD,EAAWlD,SAAU,SAAApC,GAAC,OAAIuF,EAAavF,EAAEqC,cAAcF,QAAQ3E,YAAY,QAAQH,UAAU,eACxH,2BAAOqI,KAAK,WAAWvD,MAAOqD,EAAcpD,SAAU,SAAApC,GAAC,OAAIyF,EAAgBzF,EAAEqC,cAAcF,QAAQ3E,YAAY,WAAWH,UAAU,eACpI,2BAAOqI,KAAK,WAAWvD,MAAOkF,EAAmBjF,SAAU,SAAApC,GAAC,OAAIsH,EAAqBtH,EAAEqC,cAAcF,QAAQ3E,YAAY,iBAAiBH,UAAU,eAClJ,4BAAQO,QAAS,kBAAM2B,EAAMgI,oBAAoBjJ,EAAUgH,EAAWE,EAAc6B,IAAoBhK,UAAU,eAAlH,WACF,kBAAC,IAAD,CAASA,UAAU,0BAA0BC,GAAG,UAC9C,4BAAQD,UAAU,uBAAlB,yB,wBCxBC,SAASmK,EAAT,GAAqC,IAAdC,EAAa,EAAbA,WAEpC,OACE,kBAAC,EAAazK,SAAd,MAEI,SAACC,GAAQ,IAAD,EACAyK,EAAQzK,EAAGE,eAAgBF,EAAGE,cAAc0F,UAAjB,mBAAiC5F,QAAjC,IAAiCA,GAAjC,UAAiCA,EAAIE,qBAArC,aAAiC,EAAmB0F,WAAkB,GACnG8E,EAAY,GAChBD,EAAMtI,KAAI,SAAAgB,GAAO,IAAD,EACduH,EAAU7D,KAAV,UAAe7G,EAAGe,SAASoC,UAA3B,aAAe,EAAiB9B,aAElC,IAAIsJ,EAAe,GAKnB,OAJAD,EAAUvI,KAAI,SAAAyI,GAAQ,IAAD,GACnB,OAAGA,QAAH,IAAGA,GAAH,UAAGA,EAAMC,qBAAT,aAAG,EAAqBC,SAASN,EAAWK,iBAAgBF,EAAa9D,KAAK+D,EAAKC,kBAInF,oCACG7K,EAAGE,cAAc0F,WAAa5F,EAAGE,cAAc0F,UAAUzD,KAAI,SAAAgB,GAC3D,IAAD,MAAE,OAAGwH,EAAaG,SAAb,UAAsB9K,EAAGe,SAASoC,UAAlC,aAAsB,EAAiB9B,SAASwJ,eAEjD,yBACElK,QAAS,kBAAMX,EAAGoB,YAAY+B,IAC9B/C,UAAW+C,IAAE,UAAEnD,EAAGwF,mBAAL,aAAE,EAAgBrF,QAAO,aAAa,gBACnD,yBACEC,UAAU,kBACVU,KAAO,OAAFd,QAAE,IAAFA,GAAA,UAAAA,EAAIe,SAASoC,UAAb,eAAkBnC,OAAQ,mGAC/BC,IAAI,KAEN,0BAAMb,UAAU,oBACbJ,EAAGe,SAASoC,IACXnD,EAAGe,SAASoC,GAAI9B,SAChBrB,EAAGe,SAASoC,GAAI9B,SAEhB,KAII,Y,MCvCf,SAAS0J,EAAT,GAAwC,IAAtBC,EAAqB,EAArBA,IAAKC,EAAgB,EAAhBA,QAASjK,EAAO,EAAPA,KAC7C,OACE,yBAAKZ,UAAS,kBAAa4K,GAAO,QAChC,yBAAK5K,UAAU,eACX4K,GACA,yBACA5K,UAAU,aACVU,IAAKE,EACLC,IAAI,KAGN,uBAAGb,UAAU,eAAe6K,IAE9B,yBAAK7K,UAAU,mB,MCZN,SAAS8K,EAAW5I,GAEjC,OACE,kBAAC,EAAavC,SAAd,MAEI,SAACC,GAAD,OACE,yBAAKW,QAAS,kBAAMX,EAAGoB,YAAYkB,EAAMnB,KAAKhB,SAASC,UAAU,cAC/D,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,0BACb,yBACEA,UAAU,gBACVU,IAAKwB,EAAMnB,KAAKH,KAChBC,IAAI,KAEN,yBAAKb,UAAU,qBAEjB,0BAAMA,UAAU,kBAAkBkC,EAAMnB,KAAKE,eCZ5C,SAAS8J,IAAa,IAAD,EAEF5J,mBAAS,IAFP,mBAE5B0J,EAF4B,KAEnBG,EAFmB,OAGI7J,mBAAS,IAHb,mBAG5BiJ,EAH4B,KAGhBa,EAHgB,KAKlC,OACE,kBAAC,EAAatL,SAAd,MAEI,SAACC,GAAQ,IAAD,YACA2F,EAAe3F,EAAGE,cAAc0F,UAClCe,EAAY,GAChBhB,EAAeA,EAAaxD,KAAI,SAAAgB,GAC3BnD,EAAGe,SAASoC,MAAMnD,EAAGe,SAASoC,GAAIyD,QAAoBD,EAAUE,KAAK7G,EAAGe,SAASoC,OACjFwD,EAAY,GAEjB,IAAM2E,EAAiB,WACrBF,EAAc,IACdpL,EAAGuL,YAAYvL,EAAGwF,YAAYrF,OAAQ8K,IAGlC9K,GAAW,OAAFH,QAAE,IAAFA,GAAA,UAAAA,EAAIwF,mBAAJ,eAAiBrF,SAAU,GACpCF,GAAa,OAAFD,QAAE,IAAFA,GAAA,UAAAA,EAAIE,qBAAJ,eAAmBC,SAAU,GACxCqL,GAAW,OAAFxL,QAAE,IAAFA,GAAA,UAAAA,EAAIe,SAASd,UAAb,eAAwBwL,YAAa,OAAFzL,QAAE,IAAFA,GAAA,UAAAA,EAAIe,SAASd,UAAb,eAAwBwL,SAAStL,IAAjC,OAA2CH,QAA3C,IAA2CA,GAA3C,UAA2CA,EAAIe,SAASd,UAAxD,aAA2C,EAAwBwL,SAAStL,GAAe,GAE7I,OACA,oCACE,kBAACL,EAAD,MACA,yBAAKM,UAAU,aACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,mBACb,2BACE8E,MAAOsF,EACPrF,SAAU,SAAApC,GAAC,OAAIsI,EAAiBtI,EAAEqC,cAAcF,QAChD3E,YAAY,qBACZH,UAAU,kBAEV,6BACE,kBAACmK,EAAD,CAAcC,WAAYA,OAIlC,yBAAKpK,UAAU,WACb,yBAAKA,UAAU,kBACb,oCACE,yBAAKA,UAAU,cACb,6BACGoL,EAASA,EAAOrJ,KAAI,SAAAuJ,GAAG,OACtB,kBAACX,EAAD,CACE/J,KAAMhB,EAAGwF,YAAYxE,KACrBgK,IAA0B,QAArB/I,OAAOC,KAAKwJ,GAAK,GACtBT,QAAShJ,OAAO0J,OAAOD,GAAK,QAE9B,MAGF,OAAF1L,QAAE,IAAFA,GAAA,UAAAA,EAAIe,SAASd,UAAb,eAAwB2F,YAC1B,yBAAKxF,UAAU,iBACb,8BACEiF,WAAY,SAAAtC,GACE,SAATA,EAAEX,KACLkJ,KAGFpG,MAAO+F,EACP9F,SAAU,SAAApC,GAAC,OAAIqI,EAAcrI,EAAEqC,cAAcF,QAC7C9E,UAAU,mBACVG,YAAY,uBAEd,4BACEI,QAAS2K,EACTlL,UAAU,oBAFZ,YAUR,yBAAKA,UAAU,cACb,yBAAKA,UAAU,qBACZJ,EAAGe,UAAY4F,EAAUxE,KAAI,SAAC2E,GAAD,OAC5B,kBAACoE,EAAD,CAAY9I,IAAK0E,EAAE3G,OAAQgB,KAAM2F,c,YCpFtC,SAAS8E,EAAatJ,GACnC,IAAMoE,EAAe,WACnB,OACE,oCACE,yBAAKtG,UAAU,qBACb,yBAAKA,UAAU,cAAcU,IAAI,kBAAkBG,IAAI,KACvD,0BAAMb,UAAU,gBACd,0CADF,QACyB,8CADzB,4BAIF,yBAAKA,UAAU,aAAaU,IAAI,gBAAgBG,IAAI,KACpD,wBAAIb,UAAU,iBAAd,kBACA,wBAAIA,UAAU,yBAMd2G,EAAkB,WAEtB,IAAI8E,EAAqBC,KAAKC,MAAMC,aAAaC,QAAQ,kBACrD/L,EAAgBoC,EAAMvB,SAAS8K,EAAmB1L,QAEhDA,EADmB2L,KAAKC,MAAMC,aAAaC,QAAQ,gBACzB9L,OAG1B+L,IADNhM,GADAA,EAAgBA,GAAgC,IAClB0F,UAAY1F,EAA1B,2BAA8CA,GAA9C,IAA6D0F,UAAW,MACxDA,UAAUkF,SAAS3K,GARvB,EAUkBoB,mBAAS2K,GAV3B,mBAUtBC,EAVsB,KAUNC,EAVM,KAY5B,OACE,kBAAC,EAAarM,SAAd,MAEE,SAACC,GAOC,OACA,yBAAKI,UAAU,eACb,wBAAIA,UAAU,iBAAd,oBACA,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,oBACb,0BAAMA,UAAU,mBAAhB,SACA,0BAAMA,UAAU,qBACbJ,EAAGwF,YAAYyC,MAASjI,EAAGwF,YAAYrF,QAAU,QAGtD,yBAAKC,UAAU,oBACb,0BAAMA,UAAU,mBAAhB,SACA,0BAAMA,UAAU,qBACbJ,EAAGwF,YAAY0C,SAAYlI,EAAGwF,YAAYrF,QAAU,QAGzD,yBAAKC,UAAU,oBACb,0BAAMA,UAAU,mBAAhB,iBACA,0BAAMA,UAAU,qBACbJ,EAAGwF,YAAY2C,cAAiBnI,EAAGwF,YAAYrF,QAAU,SAIhE,4BACEQ,QA7B4B,WAC9ByL,GAAsBD,GACtBnM,EAAGqM,gBA4BDjM,UAAS,oBAAe+L,EAAiB,YAAc,gBACtDA,EAAiB,SAAW,YAE/B,wBAAI/L,UAAU,iBAAd,gBAEA,kBAAC,EAAD,WASV,OACE,yBAAKA,UAAU,YACb,yBAAKA,UAAU,mBACZkC,EAAM6D,QAAU,kBAACY,EAAD,MAAsB,kBAACL,EAAD,QC/EhC,SAASiC,EAAQrG,GAE9B,OACE,kBAAC,EAAavC,SAAd,MAEE,SAACC,GAAQ,IAAD,UAEAG,GAAW,OAAFH,QAAE,IAAFA,GAAA,UAAAA,EAAIwF,mBAAJ,eAAiBrF,SAAU,GAE1C,OACA,oCACE,kBAACL,EAAD,MACA,yBAAKM,UAAU,WACb,kBAACkB,EAAD,MACA,yBAAKlB,UAAU,gBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,gBACb,yBACEA,UAAU,kBACVU,KAAO,OAAFd,QAAE,IAAFA,GAAA,UAAAA,EAAIe,SAASZ,UAAb,eAAsB6J,WAAa7J,GAAU,2EAClDc,IAAI,KAEN,yBACEb,UAAU,iBACVU,KAAO,OAAFd,QAAE,IAAFA,GAAA,UAAAA,EAAIe,SAASZ,UAAb,eAAsBa,OAASb,GAAU,mGAC9Cc,IAAI,MAGR,yBAAKb,UAAU,eACb,wBAAIA,UAAU,oBACT,OAAFJ,QAAE,IAAFA,GAAA,UAAAA,EAAIe,SAASZ,UAAb,eAAsBkB,WAAalB,GAAU,WAEhD,0BAAMC,UAAU,oBACX,OAAFJ,QAAE,IAAFA,GAAA,UAAAA,EAAIe,SAASZ,UAAb,eAAsB8J,SAAW9J,GAAU,oBAIlD,yBAAKC,UAAU,sBACb,kBAACmF,EAAD,CAAMY,SAAS,EAAOhF,MAAI,IAC1B,kBAAC,EAAD,CAAcgF,SAAO,EAACpF,SAAUuB,EAAMvB,kB,gCC5ChDuL,G,MAAcC,EAASC,cAAc,CACvCC,OAAQ,0CACRC,WAAY,yCACZC,YAAa,kFAMFC,GAHFC,KAAOC,YAAYR,GAAYS,YCEtCC,G,4MAEFC,MAAQ,CAEJlM,SAAU,I,uDAGd,WAEImM,KAAKC,IAAMP,GAAKQ,UAAL,iBAAiC,CACxCC,QAASH,KACTD,MAAO,e,kCAIf,WAEIL,GAAKU,cAAcJ,KAAKC,O,oBAG5B,WAAS,IAAD,OACE7C,EAAsB,SAACjJ,EAAUgH,EAAWE,EAAcgF,GAC5D,GAAGlM,EAASkF,OAAS,EAAGiH,MAAM,sDACzB,GAAK,4CAA6CC,KAAKpF,GACvD,GAAIE,EAAahC,OAAS,EAAGiH,MAAM,sDACnC,GAAGjF,GAAgBgF,EAAgBC,MAAM,+BACzC,CACD,IAAMrN,GAAS,IAAIuN,MAAOC,UACpBC,EAAY,CACdvM,SAAUA,EAAUgH,UAAWA,EAAWE,aAAcA,EAAcpI,OAAQA,EAC9E2F,MAAO,GAAImE,OAAQ,GAAIhC,KAAM,GAAIC,QAAS,GAAIC,aAAc,GAC5D6B,SAAU,GAAIhJ,KAAM,GAAI4F,QAAQ,EAAMhB,UAAW,GAAI6F,SAAU,IAE7D1K,EAAQ,eAAO,EAAKkM,MAAMlM,UAChCA,EAASZ,GAAUyN,EACnB,EAAKC,SAAS,CAAC9M,aACfiL,aAAa8B,QAAQ,gBAAiBhC,KAAKiC,UAAL,eAAmBH,KACzD,EAAKtL,MAAM0L,QAAQnH,KAAK,iBAd4C2G,MAAM,+BAkB5E9E,EAAmB,SAACuF,EAAeC,GACrC,IAAMC,EAAQ,EAAKlB,MAAMlM,SACrBqN,GAAY,EAChB,IAAK,IAAIjL,KAAMgL,EAEX,GAAGA,EAAMhL,GAAN,WAA0B8K,GAAiBE,EAAMhL,GAAN,cAA6B+K,EAAiB,CACxFE,GAAY,EACZ,IAAMlO,EAAa,eAAOiO,EAAMhL,IAEhC6I,aAAa8B,QAAQ,gBAAiBhC,KAAKiC,UAAU7N,IACrD,IAAMa,EAAQ,eAAO,EAAKkM,MAAMlM,UAChCA,EAASoC,GAAIyD,QAAS,EACtB7F,EAASoC,GAAIkL,MAAQtN,EAASoC,GAAIkL,KAClC,EAAKR,SAAS,CAAC9M,aACf,MAILqN,EACCZ,MAAM,wHAEL,EAAKlL,MAAM0L,QAAQnH,KAAK,aAG3BjG,EAAmB,WAErB,IAAMiL,EAAqBC,KAAKC,MAAMC,aAAaC,QAAQ,kBACrD9L,EAAM,OAAG0L,QAAH,IAAGA,OAAH,EAAGA,EAAoB1L,OAGnC6L,aAAa8B,QAAQ,gBAAiBhC,KAAKiC,UAFrB,KAGtB,IAAMhN,EAAQ,eAAO,EAAKkM,MAAMlM,UAChCA,EAASZ,GAAQyG,QAAS,EAC1B,EAAKiH,SAAS,CAAC9M,cAiHbuN,EAAY,2BACXpB,KAAKD,OADM,IAEd/M,cAAe4L,KAAKC,MAAMC,aAAaC,QAAQ,kBAC/CzG,YAAasG,KAAKC,MAAMC,aAAaC,QAAQ,gBAC7C3B,sBACA5B,mBACA9H,mBACAqE,aArHiB,SAACrB,EAAM2K,EAAKzK,GAE7B,IACM3D,EADqB2L,KAAKC,MAAMC,aAAaC,QAAQ,kBACzB9L,OAC9BkD,EAAO,IAAIqK,KAGTc,EAAU,CACZC,QAAS,EAAGpL,KAFCA,EAAKqL,WAAW,EAAG,IAAIrL,EAAKsL,UAAU,IAAItL,EAAKuL,cAAc,IAAIvL,EAAKwL,WAAW,IAAIxL,EAAKyL,aAE5ElL,KAAMA,EAAMT,GAAIhD,EAAQqC,KAAM,EACzDqB,MAAO0K,EAAKpO,OAAQA,EAAQ2D,SAAUA,EAAUgC,MAAO,IAEvDiJ,EAAY,EAAK9B,MAAMlM,SAASZ,GAAQ2F,MAC5CiJ,EAAYA,EAAUC,QAAQR,GAAWO,EAAY,CAACP,GACtD,IAAIzN,EAAQ,eAAO,EAAKkM,MAAMlM,UAC9BA,EAASZ,GAAQ2F,MAAQiJ,EACzB,EAAKlB,SAAS,CAAC9M,aACf,IAAMb,EAAgB,EAAK+M,MAAMlM,SAASZ,GAC1C6L,aAAa8B,QAAQ,gBAAiBhC,KAAKiC,UAAU7N,KAqGrDsD,cAlGkB,SAACT,GACnB,IAAM8I,EAAqBC,KAAKC,MAAMC,aAAaC,QAAQ,kBACrD9L,EAAS0L,EAAmB1L,OAC9B8O,EAAWpD,EAAmB/F,MAClCmJ,EAASC,OAAOnM,EAAEqC,cAAc+J,aAAa,SAAU,GACvD,IAAMjP,EAAa,2BAAO2L,GAAP,IAA2B/F,MAAOmJ,IACrDjD,aAAa8B,QAAQ,gBAAiBhC,KAAKiC,UAAU7N,IACrD,IAAM0N,EAAS,2BAAO,EAAKX,MAAMlM,SAASZ,IAA3B,IAAoC2F,MAAOmJ,IACpDlO,EAAQ,2BAAQ,EAAKkM,MAAMlM,UAAnB,kBAA8BZ,EAASyN,IACrD,EAAKC,SAAS,CAAC9M,cA0FfmC,YAvFgB,SAACH,EAAGP,GACpB,IAAMqJ,EAAqBC,KAAKC,MAAMC,aAAaC,QAAQ,kBACrD9L,EAAS0L,EAAmB1L,OAC9B8O,EAAWpD,EAAmB/F,MAC9BmJ,EAASlM,EAAEqC,cAAc+J,aAAa,aAAYF,EAASlM,EAAEqC,cAAc+J,aAAa,UAAU3M,OACtGyM,EAASlM,EAAEqC,cAAc+J,aAAa,UAAU3M,KAAOA,GACvD,IAAMtC,EAAa,2BAAO2L,GAAP,IAA2B/F,MAAOmJ,IACrDjD,aAAa8B,QAAQ,gBAAiBhC,KAAKiC,UAAU7N,IACrD,IAAM0N,EAAS,2BAAO,EAAKX,MAAMlM,SAASZ,IAA3B,IAAoC2F,MAAOmJ,IACpDlO,EAAQ,2BAAQ,EAAKkM,MAAMlM,UAAnB,kBAA8BZ,EAASyN,IACrD,EAAKC,SAAS,CAAC9M,cA8Ef8G,mBA3EuB,SAACuH,EAASC,GACjC,GAAID,EAAQ,CACR,IAAMvD,EAAqBC,KAAKC,MAAMC,aAAaC,QAAQ,kBACrD9L,EAAS0L,EAAmB1L,OAC5BD,EAAa,2BAAO2L,GAAP,kBAA4BwD,EAAOD,IACtDpD,aAAa8B,QAAQ,gBAAiBhC,KAAKiC,UAAU7N,IACrD,IAAM0N,EAAS,2BAAO,EAAKX,MAAMlM,SAASZ,IAA3B,kBAAqCkP,EAAOD,IACrDrO,EAAQ,2BAAQ,EAAKkM,MAAMlM,UAAnB,kBAA8BZ,EAASyN,IACrD,EAAKC,SAAS,CAAC9M,eAoEnBK,YAhEgB,SAAC+B,GACjB,IAAMqC,EAAW,eAAO,EAAKyH,MAAMlM,SAASoC,IAC5C6I,aAAa8B,QAAQ,cAAehC,KAAKiC,UAAUvI,IACnD,IACMrF,EADqB2L,KAAKC,MAAMC,aAAaC,QAAQ,kBACzB9L,OAC5BkO,EAAO,EAAKpB,MAAMlM,SAASZ,GAAQkO,KACnCT,EAAS,2BAAO,EAAKX,MAAMlM,SAASZ,IAA3B,IAAoCkO,MAAOA,IACpDtN,EAAQ,2BAAQ,EAAKkM,MAAMlM,UAAnB,kBAA8BZ,EAASyN,IACrD,EAAKC,SAAS,CAAC9M,cAyDfsL,aAtDiB,WACjB,IACMlM,EADmB2L,KAAKC,MAAMC,aAAaC,QAAQ,gBACzB9L,OAE1BF,EADqB6L,KAAKC,MAAMC,aAAaC,QAAQ,kBACvB9L,OAChCmP,EAAkB,EAAKrC,MAAMlM,SAASd,GAAU2F,WACpD0J,EAAkBA,GAAoC,IACtCxE,SAAS3K,GAAUmP,EAAgBJ,OAAOI,EAAgBC,QAAQpP,GAAQ,GAAKmP,EAAgBN,QAAQ7O,GACvH,IAAMyN,EAAS,2BAAO,EAAKX,MAAMlM,SAASd,IAA3B,IAAsC2F,UAAW0J,IAC1DvO,EAAQ,2BAAQ,EAAKkM,MAAMlM,UAAnB,kBAA8Bd,EAAW2N,IACvD5B,aAAa8B,QAAQ,gBAAiBhC,KAAKiC,UAAUH,IACrD,EAAKC,SAAS,CAAC9M,cA4CfwK,YAzCgB,SAACpL,EAAQ8K,GAAa,IAAD,EAE/BhL,EADqB6L,KAAKC,MAAMC,aAAaC,QAAQ,kBACvB9L,OAC9BqP,EAAW,CAACC,KAAMxE,GAClByE,EAAa,CAACC,MAAO1E,GACrBlK,EAAQ,eAAQ,EAAKkM,MAAMlM,UAC7B6O,EAAW7O,EAASd,GAAUwL,UAClB1K,EAASd,GAAUwL,SAAStL,GAC5BY,EAASd,GAAUwL,SAAStL,GAE9B,GACV0P,EAAa9O,EAASZ,GAAQsL,UACd1K,EAASZ,GAAQsL,SAASxL,GAC1Bc,EAASZ,GAAQsL,SAASxL,GAE5B,GAClB2P,EAAS/I,KAAK2I,GACdK,EAAWhJ,KAAK6I,GAChB,IAAMI,EAAQ,eAAK3P,EAASyP,GACtBG,EAAU,eAAK9P,EAAW4P,GAC1BG,EAAW,2BAAOjP,EAASd,IAAhB,IAA2BwL,SAAUqE,IAChDG,EAAa,2BAAOlP,EAASZ,IAAhB,IAAyBsL,SAAUsE,IAChDG,EAAW,2BAAOnP,GAAP,uBAAkBd,EAAW+P,GAA7B,cAA2C7P,EAAS8P,GAApD,IACjBjE,aAAa8B,QAAQ,gBAAiBhC,KAAKiC,UAAUiC,IACrDhE,aAAa8B,QAAQ,cAAehC,KAAKiC,UAAUkC,IACnD,EAAKpC,SAAS,CAAC9M,SAAUmP,OAmB7B,OACI,kBAAC,EAAaC,SAAd,CAAuBjL,MAAOoJ,GACtB,kBAAC,IAAD,CAAO8B,KAAK,aAAY,kBAAC,EAAD,OACxB,kBAAC,IAAD,CAAOA,KAAK,UACR,kBAAChI,EAAD,CACIM,iBAAkBA,EAClBxI,cAAe8L,aAAaC,QAAQ,iBAAmBH,KAAKC,MAAMC,aAAaC,QAAQ,kBAAhC,UAAiE,MAGhI,kBAAC,IAAD,CAAOmE,KAAK,aAAY,kBAAClG,EAAD,CAAUI,oBAAqBA,KACvD,kBAAC,IAAD,CAAO8F,KAAK,cAAa,kBAACjF,EAAD,CAAWvK,iBAAkBA,KACtD,kBAAC,IAAD,CAAOwP,KAAK,YAAW,kBAACzH,EAAD,OACvB,kBAAC,IAAD,CAAOyH,KAAK,SAAQ,kBAAC,EAAD,CAAMrP,SAAUmM,KAAKD,MAAMlM,iB,GAvNjDnB,IAAMyQ,WA6NTC,eAAWtD,ICnO1BuD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.c69b8ea3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst StoreContext = React.createContext(null);\r\n\r\nexport default StoreContext;","import React from 'react';\r\nimport \"./topbar.css\";\r\nimport { Search, Chat, ExitToApp, Home, Timeline } from \"@material-ui/icons\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport StoreContext from '../../StoreContext';\r\n\r\nexport default function Topbar() {\r\n\r\n  return (\r\n    <StoreContext.Consumer>\r\n    {\r\n      (SF) => {\r\n\r\n        const personId = SF.currentPerson?.userId || \"\"; \r\n\r\n        return(\r\n        <div className=\"topbarContainer\">\r\n          <div className=\"topbarLeft\">\r\n            <NavLink to=\"/Profile\">\r\n              <span className=\"logo\">MySoc</span>\r\n            </NavLink>\r\n          </div>\r\n          <div className=\"topbarCenter\">\r\n            <div className=\"searchbar\">\r\n              <Search className=\"searchIcon\" />\r\n              <input\r\n                placeholder=\"Search for friend, post or video\"\r\n                className=\"searchInput\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"topbarRight\">\r\n            <div className=\"topbarLinks\">\r\n              <NavLink to=\"/Profile\">\r\n                <Home />\r\n              </NavLink>\r\n              <NavLink to=\"/timeline\">\r\n                <Timeline />\r\n              </NavLink>\r\n              <NavLink to=\"/messenger\">\r\n                <Chat />\r\n              </NavLink>\r\n              <NavLink to=\"/MySoc\">\r\n                <div \r\n                  className=\"topbarIconItem\"\r\n                  onClick={SF.onClickTopbarImg} >\r\n                  <ExitToApp />\r\n                </div>\r\n              </NavLink>\r\n            </div>\r\n            <NavLink to=\"/Profile\">\r\n              <img \r\n                src={SF?.allUsers[personId]?.icon || (SF.currentPerson?.userId && \"https://yt3.ggpht.com/a/AGF-l79TeE4LZ7QszKiy-EgX9-pXgQTunY_cNGLQfg=s900-c-k-c0xffffffff-no-rj-mo\")} \r\n                alt=\"\" \r\n                className=\"topbarImg\"\r\n              />\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n        )\r\n      }\r\n    }\r\n    </StoreContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport \"./closeFriend.css\";\r\nimport StoreContext from '../../StoreContext';\r\n\r\nexport default function CloseFriend({user}) {\r\n\r\n  return (\r\n    <StoreContext.Consumer>\r\n      {\r\n        (SF) => (\r\n        <NavLink className=\"usersLinks\" to=\"/user\">\r\n          <li onClick={() => SF.onClickUser(user.userId)}  className=\"sidebarFriend\">\r\n            <img className=\"sidebarFriendImg\" src={user.icon || \"https://yt3.ggpht.com/a/AGF-l79TeE4LZ7QszKiy-EgX9-pXgQTunY_cNGLQfg=s900-c-k-c0xffffffff-no-rj-mo\"} alt='' />\r\n            <span className=\"sidebarFriendName\">{user.userName || 'unknown'}</span>\r\n          </li>\r\n        </NavLink>\r\n        )\r\n      }\r\n    </StoreContext.Consumer>\r\n  );\r\n}\r\n","import \"./sidebar.css\";\r\nimport React, {useState} from 'react';\r\nimport { RssFeed, Chat, PlayCircleFilledOutlined, Group, Bookmark, HelpOutline, WorkOutline, Event, School, Home, Timeline} from \"@material-ui/icons\";\r\nimport CloseFriend from \"../closeFriend/CloseFriend\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport StoreContext from \"../../StoreContext\";\r\n\r\n\r\nexport default function Sidebar() {\r\n\r\n  const[showMoreFlag, changeShowMoreFlag] = useState(false);\r\n\r\n  return (\r\n    <StoreContext.Consumer>\r\n    {\r\n      (SF) => (\r\n      <div className=\"sidebar\">\r\n        <div className=\"sidebarWrapper\">\r\n          <ul className=\"sidebarList\">\r\n            <NavLink className=\"sideNav\" to=\"/Profile\">\r\n              <li className=\"sidebarListItem\">\r\n                <Home className=\"sidebarIcon\" />\r\n                <span className=\"sidebarListItemText\">Homepage</span>\r\n              </li>\r\n            </NavLink>\r\n            <NavLink className=\"sideNav\" to=\"/timeline\">\r\n              <li className=\"sidebarListItem\">\r\n                <Timeline className=\"sidebarIcon\" />\r\n                <span className=\"sidebarListItemText\">Timeline</span>\r\n              </li>\r\n            </NavLink>\r\n            <NavLink className=\"sideNav\" to=\"/messenger\">\r\n              <li className=\"sidebarListItem\">\r\n                <Chat className=\"sidebarIcon\" />\r\n                <span className=\"sidebarListItemText\">Chats</span>\r\n              </li>\r\n            </NavLink>\r\n            { showMoreFlag &&\r\n            <>\r\n              <li className=\"sidebarListItem\">\r\n                <PlayCircleFilledOutlined className=\"sidebarIcon\" />\r\n                <span className=\"sidebarListItemText\">Videos</span>\r\n              </li>\r\n              <li className=\"sidebarListItem\">\r\n                <Group className=\"sidebarIcon\" />\r\n                <span className=\"sidebarListItemText\">Groups</span>\r\n              </li>\r\n              <li className=\"sidebarListItem\">\r\n                <Bookmark className=\"sidebarIcon\" />\r\n                <span className=\"sidebarListItemText\">Bookmarks</span>\r\n              </li>\r\n              <li className=\"sidebarListItem\">\r\n                <HelpOutline className=\"sidebarIcon\" />\r\n                <span className=\"sidebarListItemText\">Questions</span>\r\n              </li>\r\n              <li className=\"sidebarListItem\">\r\n                <WorkOutline className=\"sidebarIcon\" />\r\n                <span className=\"sidebarListItemText\">Jobs</span>\r\n              </li>\r\n              <li className=\"sidebarListItem\">\r\n                <Event className=\"sidebarIcon\" />\r\n                <span className=\"sidebarListItemText\">Events</span>\r\n              </li>\r\n              <li className=\"sidebarListItem\">\r\n                <School className=\"sidebarIcon\" />\r\n                <span className=\"sidebarListItemText\">Courses</span>\r\n              </li>\r\n            </>\r\n            }\r\n          </ul>\r\n          <button \r\n            className=\"sidebarButton\" \r\n            onClick={() => changeShowMoreFlag(!showMoreFlag)}>\r\n            Show More\r\n          </button>\r\n          <hr className=\"sidebarHr\" />\r\n          <ul className=\"sidebarFriendList\">\r\n            {Object.keys(SF.allUsers).map((key) => {\r\n              if (key != SF.currentPerson?.userId) return <CloseFriend key={key} user={SF.allUsers[key]} />\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      )\r\n    }\r\n    </StoreContext.Consumer>\r\n  );\r\n}\r\n","import \"./post.css\";\r\nimport { MoreVert, SdCard } from \"@material-ui/icons\";\r\nimport {Room} from \"@material-ui/icons\"\r\nimport React, { useState } from \"react\";\r\nimport StoreContext from '../../StoreContext';\r\nimport moment from 'moment';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport default function Post(props) {\r\n\r\n  const [like,setLike] = useState(props.post?.like)\r\n  const [isLiked,setIsLiked] = useState(false)\r\n  const[postTopFlag, changePostTopFlag] = useState(false);\r\n\r\n  const likeHandler = (x) => {\r\n    setLike(isLiked ? like-1 : like+1);\r\n    setIsLiked(!isLiked);\r\n    isLiked ? --x : ++x;\r\n    return x; \r\n  }\r\n\r\n  const onClickLikeNew = (e) => {\r\n    const x = likeHandler(like);\r\n    props.onClickLike(e, x);\r\n  }\r\n\r\n  const newOnClickDelBut = (e) => {\r\n    props.onClickDelBut(e);\r\n    changePostTopFlag(false);\r\n  }\r\n\r\n  const icon = \"https://yt3.ggpht.com/a/AGF-l79TeE4LZ7QszKiy-EgX9-pXgQTunY_cNGLQfg=s900-c-k-c0xffffffff-no-rj-mo\";\r\n\r\n  return (\r\n    <StoreContext.Consumer>\r\n    {\r\n      (SF) => (\r\n      <div className=\"post\">\r\n        <div className=\"postWrapper\">\r\n          <div className=\"postTop\">\r\n            <div className=\"postTopLeft\">\r\n              <NavLink className=\"usersLinks\" to=\"/user\">\r\n                <img\r\n                  onClick={() => SF.onClickUser(props.post.id)}\r\n                  className=\"postProfileImg\"\r\n                  src={SF.allUsers[props.post?.id] ? SF.allUsers[props.post.id].icon ? SF.allUsers[props.post.id].icon : icon : icon}\r\n                  alt=\"\"\r\n                />\r\n              </NavLink>\r\n              <span className=\"postUsername\">\r\n              </span>\r\n              <span className=\"postDate\">{moment(props.post?.date).fromNow()}</span>\r\n            </div>\r\n            {!props.timeline && !props.user && \r\n            <div className=\"postTopRight\">\r\n              {postTopFlag && \r\n                <button \r\n                onClick={(e) => newOnClickDelBut(e)} \r\n                className=\"delButtonPost\"\r\n                index={props.index}>\r\n                  Delete\r\n                </button>\r\n              }\r\n              <MoreVert \r\n                className=\"MoreVert\" \r\n                onClick={() => changePostTopFlag(!postTopFlag)}\r\n              />\r\n            </div>\r\n            }\r\n          </div>\r\n          <div className=\"postCenter\">\r\n            <span className=\"postText\">{props.post?.desc}</span>\r\n            <img className=\"postImg\" src={props.post?.photo} alt=\"\" />\r\n          </div>\r\n          {props.post?.location && \r\n            <div className=\"locationIcon\">\r\n              <Room htmlColor=\"green\" className=\"shareIcon\"/>\r\n              <span className=\"shareOptionText\">{props.post.location}</span>\r\n            </div>\r\n          }\r\n          <div className=\"postBottom\">\r\n            <div className=\"postBottomLeft\">\r\n              <img \r\n                index={props.index} \r\n                className=\"likeIcon\" \r\n                src=\"https://optimed.by/assets/cache/images/165x165-46_20131223031159.64d.png\" \r\n                onClick={(e) => onClickLikeNew(e)} \r\n                alt=\"\" \r\n              />\r\n              <img \r\n                index={props.index} \r\n                className=\"likeIcon\" \r\n                src=\"https://lh3.googleusercontent.com/U63LF6vJYWB86_bImNou2wKU-cy-njqa7PAIWmPElM7wvDGaumaFyJIJ0iI5olDDHR8=s75-rw\" \r\n                onClick={(e) => onClickLikeNew(e)} \r\n                alt=\"\" \r\n              />\r\n              <span \r\n                  className=\"postLikeCounter\">\r\n                  {like} people like it\r\n              </span>\r\n            </div>\r\n            {/* <div className=\"postBottomRight\">\r\n              <span className=\"postCommentText\">{props.post?.comment} comments</span>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      )\r\n    }\r\n    </StoreContext.Consumer>\r\n  );\r\n}\r\n","import \"./share.css\";\r\nimport React, {useState} from 'react';\r\nimport {PermMedia,Room} from \"@material-ui/icons\";\r\nimport StoreContext from \"../../StoreContext\";\r\n\r\nexport default function Share(props) {\r\n\r\n  const[photoFlag, onClickPhotoFlag] = useState(false);\r\n  const[sharePhotoLink, changeSharePhotoLink] = useState('');\r\n  const[photoButton, onClickPhotoButton] = useState(false);\r\n  const[shareText, changeShareText] = useState('');\r\n  const[locationFlag, onClickLocationFlag] = useState(false);\r\n  const[locationText, changeLocationText] = useState('');\r\n  const[locationButtonOk, onClickLocationButtonOk] = useState(false);\r\n\r\n  const NewOnClickShare = () => {\r\n    props.onClickShare(shareText, sharePhotoLink, locationText);\r\n    changeShareText('');\r\n    changeSharePhotoLink('');\r\n    changeLocationText('');\r\n    onClickPhotoFlag(false);\r\n    onClickLocationFlag(false);\r\n    onClickPhotoButton(false);\r\n    onClickLocationButtonOk(false);\r\n  }\r\n\r\n  return (\r\n    <StoreContext.Consumer>\r\n    {\r\n      (SF) => {\r\n\r\n        const personId = SF.currentPerson?.userId || \"\"; \r\n\r\n        return(\r\n        <div className=\"share\">\r\n          <div className=\"shareWrapper\">\r\n            <div className=\"shareTop\">\r\n              <img \r\n                className=\"shareProfileImg\" \r\n                src={SF?.allUsers[personId]?.icon || \"https://yt3.ggpht.com/a/AGF-l79TeE4LZ7QszKiy-EgX9-pXgQTunY_cNGLQfg=s900-c-k-c0xffffffff-no-rj-mo\"}\r\n                alt=\"\" \r\n              />\r\n              <input\r\n                placeholder=\"What's in your mind?\"\r\n                className=\"shareInput\"\r\n                value={shareText} \r\n                onChange={e => changeShareText(e.currentTarget.value)} \r\n              />\r\n            </div>\r\n            <hr className=\"shareHr\"/>\r\n            {photoFlag && !photoButton && \r\n            <>\r\n              <input \r\n                onKeyPress={e => { if(e.key == 'Enter') { onClickPhotoButton(true) }}}\r\n                value={sharePhotoLink} \r\n                onChange={e => changeSharePhotoLink(e.currentTarget.value)} \r\n                placeholder=\"Введите ссылку картинки...\" \r\n                className=\"sharePhotoLink\" \r\n              />\r\n              <span>\r\n                <button \r\n                  onClick={() => onClickPhotoButton(true)}  \r\n                  className=\"shareButton shareButtonOk\">\r\n                  Ok\r\n                </button>\r\n              </span>\r\n            </>\r\n            }\r\n            {photoButton &&\r\n              <img className=\"shareNewImg\" src={sharePhotoLink} alt=\"\" />\r\n            }\r\n            {locationFlag && !locationButtonOk &&\r\n              <>\r\n                <input\r\n                  onKeyPress={e => { if(e.key == 'Enter') { onClickLocationButtonOk(true) }}}\r\n                  placeholder=\"Your location...\"\r\n                  className=\"shareLocation\"\r\n                  value={locationText} \r\n                  onChange={e => changeLocationText(e.currentTarget.value)} \r\n                />\r\n                <span>\r\n                  <button onClick={() => onClickLocationButtonOk(true)}  className=\"shareButton shareButtonOk\">Ok</button>\r\n                </span>\r\n              </>\r\n            }\r\n            {locationButtonOk && \r\n              <div className=\"shareOption\">\r\n                <Room htmlColor=\"green\" className=\"shareIcon\"/>\r\n                <span className=\"shareOptionText\">{locationText}</span>\r\n              </div>\r\n            }\r\n            <div className=\"shareBottom\">\r\n                <div className=\"shareOptions newShareOptions\">\r\n                    <div onClick={() => onClickPhotoFlag(true)} className=\"shareOption\">\r\n                        <PermMedia htmlColor=\"tomato\" className=\"shareIcon\"/>\r\n                        <span className=\"shareOptionText\">Photo or Video</span>\r\n                    </div>\r\n                    <div onClick={() => onClickLocationFlag(true)} className=\"shareOption\">\r\n                        <Room htmlColor=\"green\" className=\"shareIcon\"/>\r\n                        <span className=\"shareOptionText\">Location</span>\r\n                    </div>\r\n                </div>\r\n                <button onClick={NewOnClickShare}  className=\"shareButton\">Share</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        )\r\n      }\r\n    }\r\n    </StoreContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Post from \"../post/Post\";\r\nimport Share from \"../share/Share\";\r\nimport \"./feed.css\";\r\nimport StoreContext from \"../../StoreContext\";\r\nimport moment from 'moment';\r\n\r\nexport default function Feed(props) {\r\n\r\n  return (\r\n    <StoreContext.Consumer>\r\n    {\r\n      (SF) => \r\n      {\r\n        const userId = SF?.currentUser?.userId;\r\n        const personId = SF?.currentPerson?.userId;\r\n\r\n        let followersPosts = [];\r\n        if(props.home){\r\n          const followersArr = SF?.allUsers[personId]?.followers || [];\r\n          let newFolPosts = [];\r\n          followersArr.map(id => {\r\n            if(SF.allUsers[id] ? SF.allUsers[id].posts ? 1 : 0 : 0) \r\n              newFolPosts = newFolPosts.concat(SF.allUsers[id].posts);\r\n          })\r\n          followersPosts = newFolPosts.sort((a,b) => moment(b.date) - moment(a.date));\r\n        }\r\n\r\n        return(\r\n          <div className=\"feed\">\r\n            <div className=\"feedWrapper\">\r\n              {props.profile && <Share onClickShare={SF.onClickShare}/>}\r\n              {props.profile && SF?.allUsers[personId]?.posts?.map((p, index) => (\r\n                <Post \r\n                  profile\r\n                  index={index} \r\n                  key={p?.id + index} \r\n                  post={p} \r\n                  onClickDelBut={SF.onClickDelBut}\r\n                  onClickLike={SF.onClickLike} \r\n                />\r\n              ))}\r\n              {props.user && SF?.allUsers[userId]?.posts?.map((p, index) => {\r\n                return(\r\n                <Post \r\n                  user={props.user}\r\n                  index={index} \r\n                  key={p?.id + index} \r\n                  post={p} \r\n                  onClickDelBut={SF.onClickDelBut}\r\n                  onClickLike={SF.onClickLike} \r\n                />)\r\n              })}\r\n              {props.home && followersPosts?.map((p, index) => (\r\n                <Post \r\n                  timeline\r\n                  user={props.user}\r\n                  index={index} \r\n                  key={p.id + index} \r\n                  post={p} \r\n                  onClickDelBut={SF.onClickDelBut}\r\n                  onClickLike={SF.onClickLike} \r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n    </StoreContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport \"./online.css\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport StoreContext from '../../StoreContext';\r\n\r\nexport default function Online({user}) {\r\n  return (\r\n    <StoreContext.Consumer>\r\n    {\r\n      (SF) => (\r\n      <NavLink className=\"usersLinks\" to=\"/user\">\r\n        <li onClick={() => SF.onClickUser(user.userId)} className=\"rightbarFriend\">\r\n          <div className=\"rightbarProfileImgContainer\">\r\n            <img className=\"rightbarProfileImg\" src={user.icon} alt=\"\" />\r\n            <span className=\"rightbarOnline\"></span>\r\n          </div>\r\n          <span className=\"rightbarUsername\">{user.userName}</span>\r\n        </li>\r\n      </NavLink>\r\n      )\r\n    }\r\n    </StoreContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport StoreContext from '../../StoreContext';\r\nimport \"./RightbarFollowings.css\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport default function RightbarFollowings(){\r\n    return(\r\n        <StoreContext.Consumer>\r\n        {\r\n            (SF) => {\r\n\r\n                const personId = SF.currentPerson?.userId || \"\"; \r\n\r\n                return(\r\n                <div className=\"rightbarFollowings\">\r\n                    {SF?.allUsers[personId]?.followers ? SF?.allUsers[personId]?.followers?.map(id => \r\n                        <NavLink key={id} className=\"usersLinks\" to=\"/user\">\r\n                            <div onClick={() => SF.onClickUser(id)} className=\"rightbarFollowing\">\r\n                            <img\r\n                                src={SF?.allUsers[id]?.icon || \"https://yt3.ggpht.com/a/AGF-l79TeE4LZ7QszKiy-EgX9-pXgQTunY_cNGLQfg=s900-c-k-c0xffffffff-no-rj-mo\"}\r\n\r\n                                alt=\"\"\r\n                                className=\"rightbarFollowingImg\"\r\n                            />\r\n                            <span className=\"rightbarFollowingName\">\r\n                                {SF.allUsers[id] ? \r\n                                SF.allUsers[id].userName ? \r\n                                    SF.allUsers[id].userName.length<11 ? \r\n                                    SF.allUsers[id].userName :\r\n                                    SF.allUsers[id].userName.slice(0, 10)+'...'\r\n                                : '' \r\n                                : ''}\r\n                            </span>\r\n                            </div>\r\n                        </NavLink>\r\n                    ) : []}\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        </StoreContext.Consumer>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport \"./rightbar.css\";\r\nimport Online from \"../online/Online\";\r\nimport StoreContext from \"../../StoreContext\";\r\nimport RightbarFollowings from \"../rightbarFollowings/RightbarFollowings\";\r\n\r\nexport default function Rightbar(props) {\r\n\r\n  const HomeRightbar = () => {\r\n    return (\r\n      <StoreContext.Consumer>\r\n      {\r\n        (SF) => {\r\n          const followersArr = SF.currentPerson.followers || [];\r\n          let newFolArr = [];\r\n          followersArr.map(id => {\r\n            if(SF.allUsers[id] ? SF.allUsers[id].online ? 1 : 0 : 0) newFolArr.push(SF.allUsers[id]);\r\n          })\r\n\r\n          return(\r\n            <>\r\n              <div className=\"birthdayContainer\">\r\n                <img className=\"birthdayImg\" src=\"https://herlitzbags.ru/design/@templatesforall/images/gift.svg\" alt=\"\" />\r\n                <span className=\"birthdayText\">\r\n                No one has a birthday today.\r\n                </span>\r\n              </div>\r\n              <img className=\"rightbarAd\" src=\"https://upjourney.com/wp-content/uploads/2021/03/how-to-be-a-social-butterfly.jpg\" alt=\"\" />\r\n              <h4 className=\"rightbarTitle\">Online Friends</h4>\r\n              <ul className=\"rightbarFriendList\">\r\n                {SF.allUsers && newFolArr.map((u) => (\r\n                  <Online key={u.userId} user={u} />\r\n                ))}\r\n              </ul>\r\n            </>\r\n          )\r\n        }\r\n      }\r\n      </StoreContext.Consumer>\r\n    );\r\n  };\r\n\r\n  const ProfileRightbar = () => {\r\n\r\n    const[userCityFlag, changeUserCityFlag] = useState(false);\r\n    const[userCityText, changeUserCityText] = useState('');\r\n    const[userCountryFlag, changeUserCountryFlag] = useState(false);\r\n    const[userCountryText, changeUserCountryText] = useState('');\r\n    const[userRelationshipFlag, changeUserRelationshipFlag] = useState(false);\r\n    const[userRelationshipText, changeUserRelationshipText] = useState('');\r\n\r\n    return (\r\n      <StoreContext.Consumer>\r\n      {\r\n        (SF) => {\r\n\r\n          const onClickCityButtonNew = () => {\r\n            SF.onClickInputButton(userCityText, 'city');\r\n            changeUserCityFlag(false);\r\n            changeUserCityText('');\r\n          }\r\n      \r\n          const onClickCountryButtonNew = () => {\r\n            SF.onClickInputButton(userCountryText, 'country');\r\n            changeUserCountryFlag(false);\r\n            changeUserCountryText('');\r\n          }\r\n\r\n          const onClickRelationshipButtonNew = () => {\r\n            SF.onClickInputButton(userRelationshipText, 'relationship');\r\n            changeUserRelationshipFlag(false);\r\n            changeUserRelationshipText('');\r\n          }\r\n\r\n          const personId = SF.currentPerson?.userId || \"\"; \r\n\r\n          return (\r\n          <>\r\n            <h4 className=\"rightbarTitle\">User information</h4>\r\n            <div className=\"rightbarInfo\">\r\n              <div className=\"rightbarInfoItem\">\r\n                <span className=\"rightbarInfoKey\">City:</span>\r\n                {!userCityFlag && \r\n                <span \r\n                  className=\"rightbarInfoValue\"\r\n                  onDoubleClick={() => changeUserCityFlag(true)}>\r\n                  {SF?.allUsers[personId]?.city || (SF.currentPerson?.userId && 'Your city...')}\r\n                </span>}\r\n                {userCityFlag && \r\n                  <div className='inputPlusBtnRightbar'>\r\n                    <input \r\n                      onKeyPress={e => { if(e.key == 'Enter') { onClickCityButtonNew() }}}\r\n                      value={userCityText} \r\n                      onChange={e => changeUserCityText(e.currentTarget.value)} \r\n                      placeholder={SF.currentPerson.city || \"Your city...\"} \r\n                      className=\"profileInfoInputs\" \r\n                    />\r\n                    <span>\r\n                      <button \r\n                        onClick={() => onClickCityButtonNew()}  \r\n                        className=\"shareButton shareButtonOk\">\r\n                        Ok\r\n                      </button>\r\n                    </span>\r\n                  </div>\r\n                }\r\n              </div>\r\n              <div className=\"rightbarInfoItem\">\r\n                <span className=\"rightbarInfoKey\">From:</span>\r\n                {!userCountryFlag && \r\n                <span \r\n                  className=\"rightbarInfoValue\"\r\n                  onDoubleClick={() => changeUserCountryFlag(true)}>\r\n                  {SF?.allUsers[personId]?.country || (SF.currentPerson?.userId && 'Your country...')}\r\n                </span>}\r\n                {userCountryFlag && \r\n                  <div className='inputPlusBtnRightbar'>\r\n                    <input \r\n                      onKeyPress={e => { if(e.key == 'Enter') { onClickCountryButtonNew() }}}\r\n                      value={userCountryText} \r\n                      onChange={e => changeUserCountryText(e.currentTarget.value)} \r\n                      placeholder={SF.currentPerson.country || \"Your country...\"} \r\n                      className=\"profileInfoInputs\" \r\n                    />\r\n                    <span>\r\n                      <button \r\n                        onClick={() => onClickCountryButtonNew()}  \r\n                        className=\"shareButton shareButtonOk\">\r\n                        Ok\r\n                      </button>\r\n                    </span>\r\n                  </div>\r\n                }\r\n              </div>\r\n              <div className=\"rightbarInfoItem\">\r\n                <span className=\"rightbarInfoKey\">Relationship:</span>\r\n                {!userRelationshipFlag && \r\n                <span \r\n                  className=\"rightbarInfoValue\"\r\n                  onDoubleClick={() => changeUserRelationshipFlag(true)}>\r\n                  {SF?.allUsers[personId]?.relationship || (SF.currentPerson?.userId && 'Your relationship...')}\r\n                </span>}\r\n                {userRelationshipFlag && \r\n                  <div className='inputPlusBtnRightbar'>\r\n                    <input \r\n                      onKeyPress={e => { if(e.key == 'Enter') { onClickRelationshipButtonNew() }}}\r\n                      value={userRelationshipText} \r\n                      onChange={e => changeUserRelationshipText(e.currentTarget.value)} \r\n                      placeholder={SF.currentPerson.relationship || \"Your relationship...\"} \r\n                      className=\"profileInfoInputs\" \r\n                    />\r\n                    <span>\r\n                      <button \r\n                        onClick={() => onClickRelationshipButtonNew()}  \r\n                        className=\"shareButton shareButtonOk\">\r\n                        Ok\r\n                      </button>\r\n                    </span>\r\n                  </div>\r\n                }\r\n              </div>\r\n            </div>\r\n            <h4 className=\"rightbarTitle\">User friends</h4>\r\n            \r\n            <RightbarFollowings />\r\n\r\n          </>\r\n          )\r\n        }\r\n      }\r\n      </StoreContext.Consumer>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"rightbar\">\r\n      <div className=\"rightbarWrapper\">\r\n        {props.profile ? <ProfileRightbar /> : <HomeRightbar />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Topbar from \"../../components/topbar/Topbar\";\r\nimport Sidebar from \"../../components/sidebar/Sidebar\";\r\nimport Feed from \"../../components/feed/Feed\";\r\nimport Rightbar from \"../../components/rightbar/Rightbar\";\r\nimport \"./home.css\"\r\n\r\nexport default function Home() {\r\n  return (\r\n    <>\r\n      <Topbar/>\r\n      <div className=\"homeContainer\">\r\n        <Sidebar/>\r\n        <Feed profile={false} home/>\r\n        <Rightbar profile={false} />\r\n      </div>\r\n    </>\r\n  );\r\n}","import \"./login.css\";\r\nimport React, {useState} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport default function Login(props) {\r\n\r\n  const[userEmail, setUserEmail] = useState('');\r\n  const[userPassword, setUserPassword] = useState('');\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"loginWrapper\">\r\n        <div className=\"loginLeft\">\r\n          <h3 className=\"loginLogo\">MySoc</h3>\r\n          <span className=\"loginDesc\">\r\n            Connect with friends and the world around you on MySoc.\r\n          </span>\r\n        </div>\r\n        <div className=\"loginRight\">\r\n          <div className=\"loginBox\">\r\n            <input value={userEmail} onChange={e => setUserEmail(e.currentTarget.value)} placeholder=\"Email\" className=\"loginInput\" />\r\n            <input type=\"password\" value={userPassword} onChange={e => setUserPassword(e.currentTarget.value)} placeholder=\"Password\" className=\"loginInput\" />\r\n              <button onClick={() => props.clickLoginButton(userEmail, userPassword)}  className=\"loginButton\">Log In</button>\r\n            <NavLink className=\"loginRegisterButtonLink\" to=\"/register\">\r\n              <button className=\"loginRegisterButton\">\r\n                Create a New Account\r\n              </button>\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState} from 'react';\r\nimport \"./profile.css\";\r\nimport Topbar from \"../../components/topbar/Topbar\";\r\nimport Sidebar from \"../../components/sidebar/Sidebar\";\r\nimport Feed from \"../../components/feed/Feed\";\r\nimport Rightbar from \"../../components/rightbar/Rightbar\";\r\nimport StoreContext from \"../../StoreContext\";\r\n\r\nexport default function Profile() {\r\n\r\n  const[userNameFlag, changeUserNameFlag] = useState(false);\r\n  const[userNameText, changeUserNameText] = useState('');\r\n  const[userStatusFlag, changeUserStatusFlag] = useState(false);\r\n  const[userStatusText, changeUserStatusText] = useState('');  \r\n  const[profileCoverImgFlag, changeProfileCoverImgFlag] = useState(false);\r\n  const[profileCoverImgText, changeProfileCoverImgText] = useState('');  \r\n  const[profileIconFlag, changeProfileIconFlag] = useState(false);\r\n  const[profileIconText, changeProfileIconText] = useState('');  \r\n\r\n  return (\r\n    <StoreContext.Consumer>\r\n    {\r\n      (SF) => {\r\n\r\n        const onClickNameButtonNew = () => {\r\n          SF.onClickInputButton(userNameText, 'userName');\r\n          changeUserNameFlag(false);\r\n          changeUserNameText('');\r\n        }\r\n      \r\n        const onClickStatusButtonNew = () => {\r\n          SF.onClickInputButton(userStatusText, 'status');\r\n          changeUserStatusFlag(false);\r\n          changeUserStatusText('');\r\n        }\r\n        \r\n        const onClickCoverButtonNew = () => {\r\n          SF.onClickInputButton(profileCoverImgText, 'coverUrl');\r\n          changeProfileCoverImgFlag(false);\r\n          changeProfileCoverImgText('');\r\n        }\r\n      \r\n        const onClickProfileIconButtonNew = () => {\r\n          SF.onClickInputButton(profileIconText, 'icon');\r\n          changeProfileIconFlag(false);\r\n          changeProfileIconText('');\r\n        }\r\n\r\n        const personId = SF.currentPerson?.userId || \"\"; \r\n\r\n        return (\r\n        <>\r\n          <Topbar/>\r\n          <div className=\"profile\">\r\n            <Sidebar/>\r\n            <div className=\"profileRight\">\r\n              <div className=\"profileRightTop\">\r\n                <div className=\"profileCover\">\r\n                  <img\r\n                    className=\"profileCoverImg\"\r\n                    src={SF?.allUsers[personId]?.coverUrl || (SF.currentPerson?.userId && \"https://plitka.by/upload/iblock/ebf/ebfbf270daa02e33a7bc4f58ffc982c6.jpg\")}\r\n                    onDoubleClick={() => changeProfileCoverImgFlag(true)}\r\n                    alt=\"\"\r\n                  />\r\n                {profileCoverImgFlag && \r\n                  <div className='inputPlusBtnCover'>\r\n                    <input \r\n                      onKeyPress={e => { if(e.key == 'Enter') { onClickCoverButtonNew() }}}\r\n                      value={profileCoverImgText} \r\n                      onChange={e => changeProfileCoverImgText(e.currentTarget.value)} \r\n                      placeholder={SF.currentPerson.coverUrl || \"coverUrl...\"} \r\n                      className=\"profileInfoInputs\" \r\n                    />\r\n                    <span>\r\n                      <button \r\n                        onClick={() => onClickCoverButtonNew()}  \r\n                        className=\"shareButton shareButtonOk\">\r\n                        Ok\r\n                      </button>\r\n                    </span>\r\n                  </div>\r\n                }\r\n                  <img\r\n                    className=\"profileUserImg\"\r\n                    src={SF?.allUsers[personId]?.icon || (SF.currentPerson?.userId && \"https://yt3.ggpht.com/a/AGF-l79TeE4LZ7QszKiy-EgX9-pXgQTunY_cNGLQfg=s900-c-k-c0xffffffff-no-rj-mo\")}\r\n                    onDoubleClick={() => changeProfileIconFlag(true)}\r\n                    alt=\"\"\r\n                  />\r\n                  {profileIconFlag && \r\n                  <div className='inputPlusBtnIcon'>\r\n                    <input \r\n                      onKeyPress={e => { if(e.key == 'Enter') { onClickProfileIconButtonNew() }}}\r\n                      value={profileIconText} \r\n                      onChange={e => changeProfileIconText(e.currentTarget.value)} \r\n                      placeholder={SF.currentPerson.coverUrl || \"iconUrl...\"} \r\n                      className=\"profileInfoInputs\" \r\n                    />\r\n                    <span>\r\n                      <button \r\n                        onClick={() => onClickProfileIconButtonNew()}  \r\n                        className=\"shareButton shareButtonOk\">\r\n                        Ok\r\n                      </button>\r\n                    </span>\r\n                  </div>\r\n                }\r\n                </div>\r\n                <div className=\"profileInfo\">\r\n                {!userNameFlag && \r\n                  <h4 \r\n                    className=\"profileInfoName\" \r\n                    onDoubleClick={() => changeUserNameFlag(true)}>\r\n                    {SF?.allUsers[personId]?.userName || (SF.currentPerson?.userId && \"unknown\")}\r\n                  </h4>\r\n                }\r\n                {userNameFlag && \r\n                  <div className='inputPlusBtn'>\r\n                    <input \r\n                      onKeyPress={e => { if(e.key == 'Enter') { onClickNameButtonNew() }}}\r\n                      value={userNameText} \r\n                      onChange={e => changeUserNameText(e.currentTarget.value)} \r\n                      placeholder={SF.currentPerson.userName || \"Username...\"} \r\n                      className=\"profileInfoInputs\" \r\n                    />\r\n                    <span>\r\n                      <button \r\n                        onClick={() => onClickNameButtonNew()}  \r\n                        className=\"shareButton shareButtonOk\">\r\n                        Ok\r\n                      </button>\r\n                    </span>\r\n                  </div>\r\n                }\r\n                {!userStatusFlag && \r\n                  <span \r\n                    className=\"profileInfoDesc\" \r\n                    onDoubleClick={() => changeUserStatusFlag(true)}>\r\n                    {SF?.allUsers[personId]?.status || (SF.currentPerson?.userId && \"Your status...\")}\r\n                  </span>\r\n                }\r\n                {userStatusFlag && \r\n                  <div className='inputPlusBtnStatus'>\r\n                    <input \r\n                      onKeyPress={e => { if(e.key == 'Enter') {onClickStatusButtonNew('status')}}}\r\n                      value={userStatusText} \r\n                      onChange={e => changeUserStatusText(e.currentTarget.value)} \r\n                      placeholder={SF.currentPerson.status || \"Your status...\"} \r\n                      className=\"profileInfoInputs\" \r\n                    />\r\n                    <span>\r\n                      <button \r\n                        onClick={() => onClickStatusButtonNew('status')}  \r\n                        className=\"shareButton shareButtonOk\">\r\n                        Ok\r\n                      </button>\r\n                    </span>\r\n                  </div>\r\n                }\r\n              </div>\r\n            </div>\r\n              <div className=\"profileRightBottom\">\r\n                <Feed profile />\r\n                <Rightbar profile />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n        )\r\n      }\r\n    }\r\n    </StoreContext.Consumer>\r\n  );\r\n}\r\n","import \"./register.css\";\r\nimport React, {useState} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport default function Register(props) {\r\n\r\n  const[userName, setUserName] = useState('');\r\n  const[userEmail, setUserEmail] = useState('');\r\n  const[userPassword, setUserPassword] = useState('');\r\n  const[userPasswordAgain, setUserPasswordAgain] = useState('');\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"loginWrapper\">\r\n        <div className=\"loginLeft\">\r\n          <h3 className=\"loginLogo\">MySoc</h3>\r\n          <span className=\"loginDesc\">\r\n            Connect with friends and the world around you on MySoc.\r\n          </span>\r\n        </div>\r\n        <div className=\"loginRight\">\r\n          <div className=\"loginBox\">\r\n            <input value={userName} onChange={e => setUserName(e.currentTarget.value)} placeholder=\"Username\" className=\"loginInput\" />\r\n            <input type=\"email\" value={userEmail} onChange={e => setUserEmail(e.currentTarget.value)} placeholder=\"Email\" className=\"loginInput\" />\r\n            <input type=\"password\" value={userPassword} onChange={e => setUserPassword(e.currentTarget.value)} placeholder=\"Password\" className=\"loginInput\" />\r\n            <input type=\"password\" value={userPasswordAgain} onChange={e => setUserPasswordAgain(e.currentTarget.value)} placeholder=\"Password Again\" className=\"loginInput\" />\r\n              <button onClick={() => props.clickRegisterButton(userName, userEmail, userPassword, userPasswordAgain)} className=\"loginButton\">Sign Up</button>\r\n            <NavLink className=\"loginRegisterButtonLink\" to=\"/MySoc\">\r\n              <button className=\"loginRegisterButton\">\r\n                Log into Account\r\n              </button>\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport \"./conversation.css\";\r\nimport StoreContext from '../../StoreContext'\r\n\r\nexport default function Conversation({searchText}) {\r\n\r\n  return (\r\n    <StoreContext.Consumer>\r\n        {\r\n        (SF) => {\r\n          const idArr = SF.currentPerson ? SF.currentPerson.followers ? [...SF?.currentPerson?.followers] : [] : [];\r\n          let searchArr = [];\r\n          idArr.map(id => {\r\n            searchArr.push(SF.allUsers[id]?.userName)\r\n          })\r\n          let newSearchArr = [];\r\n          searchArr.map(name =>{\r\n            if(name?.toUpperCase()?.includes(searchText.toUpperCase())) newSearchArr.push(name.toUpperCase());\r\n          })\r\n\r\n          return(\r\n            <>\r\n              {SF.currentPerson.followers && SF.currentPerson.followers.map(id =>\r\n                { if(newSearchArr.includes(SF.allUsers[id]?.userName.toUpperCase()))\r\n                  return(\r\n                    <div \r\n                      onClick={() => SF.onClickUser(id)} \r\n                      className={id==SF.currentUser?.userId?\"activeChat\":\"conversation\"}>\r\n                      <img\r\n                        className=\"conversationImg\"\r\n                        src={SF?.allUsers[id]?.icon || \"https://yt3.ggpht.com/a/AGF-l79TeE4LZ7QszKiy-EgX9-pXgQTunY_cNGLQfg=s900-c-k-c0xffffffff-no-rj-mo\"}\r\n                        alt=\"\"\r\n                      />\r\n                      <span className=\"conversationName\">\r\n                        {SF.allUsers[id] ? \r\n                          SF.allUsers[id].userName ? \r\n                          SF.allUsers[id].userName\r\n                          : '' \r\n                        : ''}\r\n                      </span>\r\n                    </div>\r\n                  )\r\n                  else return null\r\n                }\r\n              )}\r\n            </>\r\n          )\r\n        }\r\n      }\r\n    </StoreContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport \"./message.css\";\r\n\r\nexport default function Message({own, message, icon}) {\r\n  return (\r\n    <div className={`message ${own && 'own'}`}>\r\n      <div className=\"messageTop\">\r\n        {!own &&\r\n          <img\r\n          className=\"messageImg\"\r\n          src={icon}\r\n          alt=\"\"\r\n          />\r\n        }\r\n        <p className=\"messageText\">{message}</p>\r\n      </div>\r\n      <div className=\"messageBottom\"></div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport \"./chatOnline.css\";\r\nimport StoreContext from \"../../StoreContext\"\r\n\r\nexport default function ChatOnline(props) {\r\n\r\n  return (\r\n    <StoreContext.Consumer>\r\n      {\r\n        (SF) => (\r\n          <div onClick={() => SF.onClickUser(props.user.userId)} className=\"chatOnline\">\r\n            <div className=\"chatOnlineFriend\">\r\n              <div className=\"chatOnlineImgContainer\">\r\n                <img\r\n                  className=\"chatOnlineImg\"\r\n                  src={props.user.icon}\r\n                  alt=\"\"\r\n                />\r\n                <div className=\"chatOnlineBadge\"></div>\r\n              </div>\r\n              <span className=\"chatOnlineName\">{props.user.userName}</span>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    </StoreContext.Consumer>\r\n  );\r\n}\r\n","import \"./messenger.css\";\r\nimport Topbar from \"../../components/topbar/Topbar\";\r\nimport Conversation from \"../../components/conversations/Conversation\";\r\nimport Message from \"../../components/message/Message\";\r\nimport ChatOnline from \"../../components/chatOnline/ChatOnline\";\r\nimport React, {useState} from 'react';\r\nimport StoreContext from \"../../StoreContext\"\r\n\r\nexport default function Messenger() {\r\n\r\n  const[message, changeMessage] = useState(''); \r\n  const[searchText, changeSearchText] = useState('');\r\n\r\n  return (\r\n    <StoreContext.Consumer>\r\n      {\r\n        (SF) => {\r\n          const followersArr = SF.currentPerson.followers;\r\n          let newFolArr = [];\r\n          followersArr ? followersArr.map(id => {\r\n            if(SF.allUsers[id] ? SF.allUsers[id].online ? 1 : 0 : 0) newFolArr.push(SF.allUsers[id]);\r\n          }) : newFolArr = [];\r\n\r\n          const onSendClickNew = () => {\r\n            changeMessage('');\r\n            SF.onSendClick(SF.currentUser.userId, message)\r\n          }\r\n\r\n          const userId = SF?.currentUser?.userId || \"\";\r\n          const personId = SF?.currentPerson?.userId || \"\";\r\n          const mesArr = SF?.allUsers[personId]?.messages ? SF?.allUsers[personId]?.messages[userId] ? SF?.allUsers[personId]?.messages[userId] : [] : [];\r\n          \r\n          return(\r\n          <>\r\n            <Topbar/>\r\n            <div className=\"messenger\">\r\n              <div className=\"chatMenu\">\r\n                <div className=\"chatMenuWrapper\">\r\n                  <input \r\n                    value={searchText}\r\n                    onChange={e => changeSearchText(e.currentTarget.value)}\r\n                    placeholder=\"Search for friends\" \r\n                    className=\"chatMenuInput\" \r\n                  />\r\n                    <div>\r\n                      <Conversation searchText={searchText}/>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"chatBox\">\r\n                <div className=\"chatBoxWrapper\">\r\n                  <>\r\n                    <div className=\"chatBoxTop\">\r\n                      <div>\r\n                        {mesArr ? mesArr.map(mes => \r\n                          <Message\r\n                            icon={SF.currentUser.icon} \r\n                            own={Object.keys(mes)[0]=='true'} \r\n                            message={Object.values(mes)[0]}\r\n                          />) \r\n                        : []}\r\n                      </div>\r\n                    </div>\r\n                    { SF?.allUsers[personId]?.followers &&\r\n                    <div className=\"chatBoxBottom\">\r\n                      <textarea\r\n                        onKeyPress={e => {\r\n                          if(e.key == 'Enter') {\r\n                          onSendClickNew()\r\n                          } \r\n                        }}\r\n                        value={message}\r\n                        onChange={e => changeMessage(e.currentTarget.value)}\r\n                        className=\"chatMessageInput\"\r\n                        placeholder=\"write something...\">\r\n                      </textarea>\r\n                      <button \r\n                        onClick={onSendClickNew} \r\n                        className=\"chatSubmitButton\">\r\n                        Send\r\n                      </button>\r\n                    </div>\r\n                    }\r\n                  </>\r\n                </div>\r\n              </div>\r\n              <div className=\"chatOnline\">\r\n                <div className=\"chatOnlineWrapper\">\r\n                  {SF.allUsers && newFolArr.map((u) => (\r\n                    <ChatOnline key={u.userId} user={u} />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n          )\r\n        }\r\n      }\r\n    </StoreContext.Consumer>\r\n  );\r\n}\r\n","import React, {useState} from 'react';\r\nimport \"./userRightbar.css\";\r\nimport StoreContext from \"../../StoreContext\";\r\nimport RightbarFollowings from '../../components/rightbarFollowings/RightbarFollowings';\r\n\r\nexport default function userRightbar(props) {\r\n  const HomeRightbar = () => {\r\n    return (\r\n      <>\r\n        <div className=\"birthdayContainer\">\r\n          <img className=\"birthdayImg\" src=\"assets/gift.png\" alt=\"\" />\r\n          <span className=\"birthdayText\">\r\n            <b>Pola Foster</b> and <b>3 other friends</b> have a birthday today.\r\n          </span>\r\n        </div>\r\n        <img className=\"rightbarAd\" src=\"assets/ad.png\" alt=\"\" />\r\n        <h4 className=\"rightbarTitle\">Online Friends</h4>\r\n        <ul className=\"rightbarFriendList\">\r\n        </ul>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const ProfileRightbar = () => {\r\n\r\n    let localCurrentPerson = JSON.parse(localStorage.getItem('currentPerson'));\r\n    let currentPerson = props.allUsers[localCurrentPerson.userId];\r\n    const localCurrentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    const userId = localCurrentUser.userId;\r\n    currentPerson = currentPerson ? currentPerson : {};\r\n    currentPerson = currentPerson.followers ? currentPerson : {...currentPerson, followers: []};\r\n    const isFollow = !currentPerson.followers.includes(userId);\r\n\r\n    const[userFollowFlag, changeUserFollowFlag] = useState(isFollow);\r\n\r\n    return (\r\n      <StoreContext.Consumer>\r\n      {\r\n        (SF) => {\r\n\r\n          const changeUserFollowFlagNew = () => {\r\n            changeUserFollowFlag(!userFollowFlag);\r\n            SF.followOnUser()\r\n          }\r\n\r\n          return (\r\n          <div className='userWrapper'>\r\n            <h4 className=\"rightbarTitle\">User information</h4>\r\n            <div className=\"rightbarInfo\">\r\n              <div className=\"rightbarInfoItem\">\r\n                <span className=\"rightbarInfoKey\">City:</span>\r\n                <span className=\"rightbarInfoValue\">\r\n                  {SF.currentUser.city || (SF.currentUser.userId && '...')}\r\n                </span>\r\n              </div>\r\n              <div className=\"rightbarInfoItem\">\r\n                <span className=\"rightbarInfoKey\">From:</span>\r\n                <span className=\"rightbarInfoValue\">\r\n                  {SF.currentUser.country || (SF.currentUser.userId && '...')}\r\n                </span>\r\n              </div>\r\n              <div className=\"rightbarInfoItem\">\r\n                <span className=\"rightbarInfoKey\">Relationship:</span>\r\n                <span className=\"rightbarInfoValue\">\r\n                  {SF.currentUser.relationship || (SF.currentUser.userId && '...')}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <button \r\n              onClick={changeUserFollowFlagNew} \r\n              className={`followBtn ${userFollowFlag ? 'redFollow' : 'greenFollow'}`}>\r\n              {userFollowFlag ? 'FOLLOW' : 'UNFOLLOW'}\r\n            </button>\r\n            <h4 className=\"rightbarTitle\">User friends</h4>\r\n\r\n            <RightbarFollowings />\r\n\r\n          </div>\r\n          )\r\n        }\r\n      }\r\n      </StoreContext.Consumer>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"rightbar\">\r\n      <div className=\"rightbarWrapper\">\r\n        {props.profile ? <ProfileRightbar /> : <HomeRightbar />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport \"./user.css\";\r\nimport Topbar from \"../../components/topbar/Topbar\";\r\nimport Sidebar from \"../../components/sidebar/Sidebar\";\r\nimport Feed from \"../../components/feed/Feed\";\r\nimport UserRightbar from \"./userRightbar\";\r\nimport StoreContext from \"../../StoreContext\";\r\n\r\nexport default function Profile(props) { \r\n\r\n  return (\r\n    <StoreContext.Consumer>\r\n    {\r\n      (SF) => {\r\n\r\n        const userId = SF?.currentUser?.userId || \"\";\r\n\r\n        return (\r\n        <>\r\n          <Topbar/>\r\n          <div className=\"profile\">\r\n            <Sidebar/>\r\n            <div className=\"profileRight\">\r\n              <div className=\"profileRightTop\">\r\n                <div className=\"profileCover\">\r\n                  <img\r\n                    className=\"profileCoverImg\"\r\n                    src={SF?.allUsers[userId]?.coverUrl || (userId && \"https://plitka.by/upload/iblock/ebf/ebfbf270daa02e33a7bc4f58ffc982c6.jpg\")}\r\n                    alt=\"\"\r\n                  />\r\n                  <img\r\n                    className=\"profileUserImg\"\r\n                    src={SF?.allUsers[userId]?.icon || (userId && \"https://yt3.ggpht.com/a/AGF-l79TeE4LZ7QszKiy-EgX9-pXgQTunY_cNGLQfg=s900-c-k-c0xffffffff-no-rj-mo\")}\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"profileInfo\">\r\n                  <h4 className=\"profileInfoName\">\r\n                    {SF?.allUsers[userId]?.userName || (userId && \"unknown\")}\r\n                  </h4>\r\n                  <span className=\"profileInfoDesc\">\r\n                    {SF?.allUsers[userId]?.status || (userId && \"Your status...\")}\r\n                  </span>\r\n              </div>\r\n            </div>\r\n              <div className=\"profileRightBottom\">\r\n                <Feed profile={false} user/>\r\n                <UserRightbar profile allUsers={props.allUsers} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n        )\r\n      }\r\n    }\r\n    </StoreContext.Consumer>\r\n  );\r\n}\r\n","import Rebase from 're-base'\r\nimport firebase from 'firebase'\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyD7Y3vb7mNdWMUZ5OPSKaKoXwos0EMlYSM\",\r\n    authDomain: \"very-hot-burgers-c47ca.firebaseapp.com\",\r\n    databaseURL: \"https://very-hot-burgers-c47ca-default-rtdb.europe-west1.firebasedatabase.app\",\r\n})\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\nexport {firebaseApp};\r\nexport default base;","import Home from \"./pages/home/Home\";\r\nimport Login from \"./pages/login/Login\";\r\nimport Profile from \"./pages/profile/Profile\";\r\nimport Register from \"./pages/register/Register\";\r\nimport Messenger from \"./pages/messenger/Messenger\";\r\nimport User from \"./pages/user/user\"\r\nimport { Route, useHistory, withRouter} from 'react-router-dom';\r\nimport React from 'react'\r\nimport base from './base'\r\nimport StoreContext from \"./StoreContext\";\r\n\r\nclass App extends React.Component{\r\n\r\n    state = {          \r\n        //инициализация state\r\n        allUsers: {},\r\n    };\r\n\r\n    componentDidMount(){    \r\n        //синхронизация state и БД\r\n        this.ref = base.syncState(`MySoc/allUsers`, {\r\n            context: this,\r\n            state: 'allUsers'\r\n        })\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        // удаление ссылки на БД\r\n        base.removeBinding(this.ref);\r\n    }\r\n\r\n    render(){\r\n        const clickRegisterButton = (userName, userEmail, userPassword, repeatPassword) => {\r\n            if(userName.length < 8) alert('The Username must contain at least 8 symbols!');\r\n            else if(!(/^[A-Z0-9._%+-]+@[A-Z0-9-]+.+.[A-Z]{2,4}$/i).test(userEmail)) alert('Enter the Email correctly!')\r\n            else if (userPassword.length < 8) alert('The Password must contain at least 8 symbols!')\r\n            else if(userPassword != repeatPassword) alert('Passwords do not match!')\r\n            else {\r\n                const userId = new Date().valueOf(); \r\n                const newPerson = {                  \r\n                    userName: userName, userEmail: userEmail, userPassword: userPassword, userId: userId,\r\n                    posts: [], status: '', city: '', country: '', relationship: '',\r\n                    coverUrl: '', icon: '', online: true, followers: [], messages: [],\r\n                    }\r\n                const allUsers = {...this.state.allUsers};  \r\n                allUsers[userId] = newPerson;               \r\n                this.setState({allUsers});                  \r\n                localStorage.setItem('currentPerson', JSON.stringify({...newPerson}));\r\n                this.props.history.push('/profile');\r\n            }\r\n        }\r\n\r\n        const clickLoginButton = (thisUserEmail, thisUserPassword) => {\r\n            const users = this.state.allUsers; // создание объекта со всеми текущими пользователями\r\n            let loginFlag = true;              // создание переменной (флага) для проверки совпадения\r\n            for (var id in users) {            // начало цикла проверки совпадения\r\n                // если находится совпадение выполнится код условия\r\n                if(users[id]['userEmail'] == thisUserEmail && users[id]['userPassword'] == thisUserPassword){\r\n                    loginFlag = false;  // изменение флага совпадения\r\n                    const currentPerson = {...users[id]};  // создание копии совпадающего пользователя \r\n                    // установка копии в локальное хранилище\r\n                    localStorage.setItem('currentPerson', JSON.stringify(currentPerson)); \r\n                    const allUsers = {...this.state.allUsers}; // создание копии state allUsers\r\n                    allUsers[id].online = true;                // изменение параметра online\r\n                    allUsers[id].flag = !allUsers[id].flag;    // изменение параметра flag\r\n                    this.setState({allUsers});                 // изменение state компоненты App\r\n                    break;                                     // выход из цикла\r\n                }\r\n            }\r\n            // если совпадений не нашлось, то выводим текст оповещения\r\n            if(loginFlag){\r\n                alert('Email или Password введен неверно...') // оповещение\r\n            }\r\n            else this.props.history.push('/profile');\r\n        }\r\n\r\n        const onClickTopbarImg = () => {\r\n            // получение информации о текущем пользователе\r\n            const localCurrentPerson = JSON.parse(localStorage.getItem('currentPerson'));\r\n            const userId = localCurrentPerson?.userId;  // получение Id текущего пользователя\r\n            const currentPerson = {};   // создание объекта пустого пользователя\r\n            // изменение действующего пользователя на пустого в локальном хранилище\r\n            localStorage.setItem('currentPerson', JSON.stringify(currentPerson));\r\n            const allUsers = {...this.state.allUsers};  // создание копии state allUsers\r\n            allUsers[userId].online = false;  // изменение параметра online \r\n            this.setState({allUsers});  // изменение state компоненты App\r\n        }\r\n\r\n        const onClickShare = (desc, img, location) => {\r\n            // получение информации о текущем пользователе\r\n            const localCurrentPerson = JSON.parse(localStorage.getItem('currentPerson'));\r\n            const userId = localCurrentPerson.userId;  // получение Id текущего пользователя\r\n            let date = new Date();  // создание переменной текущей даты и времени\r\n            // создание строки даты и времени опубликования поста\r\n            const newDate = (date.getMonth()+1)+\".\"+date.getDate()+\".\"+date.getFullYear()+\" \"+date.getHours()+\":\"+date.getMinutes(); \r\n            const newPost = {  // создание объекта нового поста\r\n                comment: 0, date: newDate, desc: desc, id: userId, like: 0,\r\n                photo: img, userId: userId, location: location, posts: [],\r\n            }\r\n            let copyPosts = this.state.allUsers[userId].posts;  // создание копии всех постов пользователя\r\n            copyPosts ? copyPosts.unshift(newPost) : copyPosts = [newPost];  // добавление поста\r\n            let allUsers = {...this.state.allUsers};  // создание копии state allUsers\r\n            allUsers[userId].posts = copyPosts;  // изменение параметра posts в копии allUsers\r\n            this.setState({allUsers});  // изменение state компоненты App\r\n            const currentPerson = this.state.allUsers[userId];  // создание копии текущего пользователя\r\n            localStorage.setItem('currentPerson', JSON.stringify(currentPerson)); // изменение localStorage\r\n        }\r\n\r\n        const onClickDelBut = (e) => {\r\n            const localCurrentPerson = JSON.parse(localStorage.getItem('currentPerson'));\r\n            const userId = localCurrentPerson.userId;\r\n            let newPosts = localCurrentPerson.posts;\r\n            newPosts.splice(e.currentTarget.getAttribute(\"index\"), 1);\r\n            const currentPerson = {...localCurrentPerson, posts: newPosts};\r\n            localStorage.setItem('currentPerson', JSON.stringify(currentPerson));\r\n            const newPerson = {...this.state.allUsers[userId], posts: newPosts};\r\n            const allUsers = { ...this.state.allUsers, [userId]: newPerson }\r\n            this.setState({allUsers});\r\n        }\r\n\r\n        const onClickLike = (e, like) => {\r\n            const localCurrentPerson = JSON.parse(localStorage.getItem('currentPerson'));\r\n            const userId = localCurrentPerson.userId;\r\n            let newPosts = localCurrentPerson.posts;\r\n            if (newPosts[e.currentTarget.getAttribute(\"index\")] ? newPosts[e.currentTarget.getAttribute(\"index\")].like ? 1 : 0 : 0)\r\n            newPosts[e.currentTarget.getAttribute(\"index\")].like = like;\r\n            const currentPerson = {...localCurrentPerson, posts: newPosts}\r\n            localStorage.setItem('currentPerson', JSON.stringify(currentPerson));\r\n            const newPerson = {...this.state.allUsers[userId], posts: newPosts};\r\n            const allUsers = { ...this.state.allUsers, [userId]: newPerson }\r\n            this.setState({allUsers});\r\n        }\r\n\r\n        const onClickInputButton = (newText, word) => {\r\n            if (newText){\r\n                const localCurrentPerson = JSON.parse(localStorage.getItem('currentPerson'));\r\n                const userId = localCurrentPerson.userId;\r\n                const currentPerson = {...localCurrentPerson, [word]: newText};\r\n                localStorage.setItem('currentPerson', JSON.stringify(currentPerson));\r\n                const newPerson = {...this.state.allUsers[userId], [word]: newText};\r\n                const allUsers = { ...this.state.allUsers, [userId]: newPerson };\r\n                this.setState({allUsers});\r\n            }\r\n        }\r\n\r\n        const onClickUser = (id) => {\r\n            const currentUser = {...this.state.allUsers[id]};\r\n            localStorage.setItem('currentUser', JSON.stringify(currentUser));\r\n            const localCurrentPerson = JSON.parse(localStorage.getItem('currentPerson'));\r\n            const userId = localCurrentPerson.userId;\r\n            const flag = this.state.allUsers[userId].flag;\r\n            const newPerson = {...this.state.allUsers[userId], flag: !flag};\r\n            const allUsers = { ...this.state.allUsers, [userId]: newPerson }\r\n            this.setState({allUsers});\r\n        }\r\n\r\n        const followOnUser = () => {\r\n            const localCurrentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n            const userId = localCurrentUser.userId;\r\n            const localCurrentPerson = JSON.parse(localStorage.getItem('currentPerson'));\r\n            const personId = localCurrentPerson.userId;\r\n            let personFollowers = this.state.allUsers[personId].followers;\r\n            personFollowers = personFollowers ? personFollowers : [];\r\n            personFollowers.includes(userId) ? personFollowers.splice(personFollowers.indexOf(userId),1) : personFollowers.unshift(userId);\r\n            const newPerson = {...this.state.allUsers[personId], followers: personFollowers }\r\n            const allUsers = { ...this.state.allUsers, [personId]: newPerson }\r\n            localStorage.setItem('currentPerson', JSON.stringify(newPerson));\r\n            this.setState({allUsers});\r\n        }\r\n\r\n        const onSendClick = (userId, message) => {\r\n            const localCurrentPerson = JSON.parse(localStorage.getItem('currentPerson'));\r\n            const personId = localCurrentPerson.userId;\r\n            const newMesMy = {true: message};\r\n            const newMesYour = {false: message};\r\n            const allUsers = { ...this.state.allUsers}\r\n            let mesArrMy = allUsers[personId].messages ? \r\n                            allUsers[personId].messages[userId] ? \r\n                            allUsers[personId].messages[userId]\r\n                            : [] \r\n                        : [];\r\n            let mesArrYour = allUsers[userId].messages ? \r\n                                allUsers[userId].messages[personId] ? \r\n                                allUsers[userId].messages[personId]\r\n                                : [] \r\n                            : [];\r\n            mesArrMy.push(newMesMy);\r\n            mesArrYour.push(newMesYour);\r\n            const objMesMy = {[userId]: mesArrMy};\r\n            const objMesYour = {[personId]: mesArrYour};\r\n            const newPersonMy = {...allUsers[personId], messages: objMesMy};\r\n            const newPersonYour = {...allUsers[userId], messages: objMesYour};\r\n            const allUsersNew = {...allUsers, [personId]: newPersonMy, [userId]: newPersonYour};\r\n            localStorage.setItem('currentPerson', JSON.stringify(newPersonMy));\r\n            localStorage.setItem('currentUser', JSON.stringify(newPersonYour));\r\n            this.setState({allUsers: allUsersNew});\r\n        }\r\n\r\n        const stateAndFunc = {\r\n            ...this.state,\r\n            currentPerson: JSON.parse(localStorage.getItem('currentPerson')),\r\n            currentUser: JSON.parse(localStorage.getItem('currentUser')),\r\n            clickRegisterButton,\r\n            clickLoginButton,\r\n            onClickTopbarImg,\r\n            onClickShare,\r\n            onClickDelBut,\r\n            onClickLike,\r\n            onClickInputButton,\r\n            onClickUser,\r\n            followOnUser,\r\n            onSendClick,\r\n        }\r\n\r\n        return (\r\n            <StoreContext.Provider value={stateAndFunc}> \r\n                    <Route path=\"/timeline\"><Home /></Route>\r\n                    <Route path=\"/MySoc\">\r\n                        <Login \r\n                            clickLoginButton={clickLoginButton} \r\n                            currentPerson={localStorage.getItem('currentPerson') ? JSON.parse(localStorage.getItem('currentPerson'))['userEmail'] : {}} \r\n                        />\r\n                    </Route> \r\n                    <Route path=\"/register\"><Register clickRegisterButton={clickRegisterButton} /></Route>\r\n                    <Route path=\"/messenger\"><Messenger onClickTopbarImg={onClickTopbarImg} /></Route>\r\n                    <Route path=\"/profile\"><Profile /></Route>\r\n                    <Route path=\"/user\"><User allUsers={this.state.allUsers}/></Route>\r\n            </StoreContext.Provider>\r\n          )\r\n    }\r\n}\r\n\r\nexport default withRouter(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}